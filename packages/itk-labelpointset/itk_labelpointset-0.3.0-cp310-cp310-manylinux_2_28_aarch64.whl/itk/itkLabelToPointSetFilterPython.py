# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _LabelPointSetPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelToPointSetFilterPython
else:
    import _itkLabelToPointSetFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToMeshFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkPointSetPython
import itk.itkArrayPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMeshBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkMeshSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython

def itkLabelToPointSetFilterISS2MD2_New():
    return itkLabelToPointSetFilterISS2MD2.New()

class itkLabelToPointSetFilterISS2MD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MD2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2MD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2MD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2MD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MD2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MD2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MD2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MD2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MD2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2MD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2MD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2MD2

        Create a new object of the class itkLabelToPointSetFilterISS2MD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2MD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2MD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2MD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2MD2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MD2_swigregister(itkLabelToPointSetFilterISS2MD2)

def itkLabelToPointSetFilterISS2MF2_New():
    return itkLabelToPointSetFilterISS2MF2.New()

class itkLabelToPointSetFilterISS2MF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MF2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2MF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2MF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2MF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MF2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MF2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MF2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MF2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MF2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2MF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2MF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2MF2

        Create a new object of the class itkLabelToPointSetFilterISS2MF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2MF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2MF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2MF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2MF2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MF2_swigregister(itkLabelToPointSetFilterISS2MF2)

def itkLabelToPointSetFilterISS2MSS2_New():
    return itkLabelToPointSetFilterISS2MSS2.New()

class itkLabelToPointSetFilterISS2MSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MSS2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2MSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2MSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2MSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MSS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MSS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MSS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MSS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MSS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2MSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2MSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2MSS2

        Create a new object of the class itkLabelToPointSetFilterISS2MSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2MSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2MSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2MSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2MSS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MSS2_swigregister(itkLabelToPointSetFilterISS2MSS2)

def itkLabelToPointSetFilterISS2MUC2_New():
    return itkLabelToPointSetFilterISS2MUC2.New()

class itkLabelToPointSetFilterISS2MUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MUC2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2MUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2MUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2MUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUC2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUC2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUC2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUC2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUC2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2MUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2MUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2MUC2

        Create a new object of the class itkLabelToPointSetFilterISS2MUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2MUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2MUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2MUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2MUC2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUC2_swigregister(itkLabelToPointSetFilterISS2MUC2)

def itkLabelToPointSetFilterISS2MUS2_New():
    return itkLabelToPointSetFilterISS2MUS2.New()

class itkLabelToPointSetFilterISS2MUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MUS2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2MUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2MUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2MUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2MUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2MUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2MUS2

        Create a new object of the class itkLabelToPointSetFilterISS2MUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2MUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2MUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2MUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2MUS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2MUS2_swigregister(itkLabelToPointSetFilterISS2MUS2)

def itkLabelToPointSetFilterISS2PSD2_New():
    return itkLabelToPointSetFilterISS2PSD2.New()

class itkLabelToPointSetFilterISS2PSD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSD2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2PSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2PSD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2PSD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSD2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSD2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSD2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSD2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSD2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2PSD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2PSD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2PSD2

        Create a new object of the class itkLabelToPointSetFilterISS2PSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2PSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2PSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2PSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2PSD2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSD2_swigregister(itkLabelToPointSetFilterISS2PSD2)

def itkLabelToPointSetFilterISS2PSF2_New():
    return itkLabelToPointSetFilterISS2PSF2.New()

class itkLabelToPointSetFilterISS2PSF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSF2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2PSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2PSF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2PSF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSF2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSF2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSF2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSF2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSF2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2PSF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2PSF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2PSF2

        Create a new object of the class itkLabelToPointSetFilterISS2PSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2PSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2PSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2PSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2PSF2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSF2_swigregister(itkLabelToPointSetFilterISS2PSF2)

def itkLabelToPointSetFilterISS2PSSS2_New():
    return itkLabelToPointSetFilterISS2PSSS2.New()

class itkLabelToPointSetFilterISS2PSSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSSS2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2PSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2PSSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2PSSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSSS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSSS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSSS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSSS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSSS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2PSSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2PSSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2PSSS2

        Create a new object of the class itkLabelToPointSetFilterISS2PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2PSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2PSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2PSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2PSSS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSSS2_swigregister(itkLabelToPointSetFilterISS2PSSS2)

def itkLabelToPointSetFilterISS2PSUC2_New():
    return itkLabelToPointSetFilterISS2PSUC2.New()

class itkLabelToPointSetFilterISS2PSUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSUC2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2PSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2PSUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2PSUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUC2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUC2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUC2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUC2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUC2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2PSUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2PSUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2PSUC2

        Create a new object of the class itkLabelToPointSetFilterISS2PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2PSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2PSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2PSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2PSUC2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUC2_swigregister(itkLabelToPointSetFilterISS2PSUC2)

def itkLabelToPointSetFilterISS2PSUS2_New():
    return itkLabelToPointSetFilterISS2PSUS2.New()

class itkLabelToPointSetFilterISS2PSUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSUS2):
    r"""Proxy of C++ itkLabelToPointSetFilterISS2PSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS2PSUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS2PSUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS2PSUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS2PSUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS2PSUS2

        Create a new object of the class itkLabelToPointSetFilterISS2PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS2PSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS2PSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS2PSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS2PSUS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS2PSUS2_swigregister(itkLabelToPointSetFilterISS2PSUS2)

def itkLabelToPointSetFilterISS3MD3_New():
    return itkLabelToPointSetFilterISS3MD3.New()

class itkLabelToPointSetFilterISS3MD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MD3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3MD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3MD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MD3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MD3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MD3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MD3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MD3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3MD3

        Create a new object of the class itkLabelToPointSetFilterISS3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3MD3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MD3_swigregister(itkLabelToPointSetFilterISS3MD3)

def itkLabelToPointSetFilterISS3MF3_New():
    return itkLabelToPointSetFilterISS3MF3.New()

class itkLabelToPointSetFilterISS3MF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MF3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3MF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3MF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MF3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MF3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MF3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MF3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MF3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3MF3

        Create a new object of the class itkLabelToPointSetFilterISS3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3MF3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MF3_swigregister(itkLabelToPointSetFilterISS3MF3)

def itkLabelToPointSetFilterISS3MSS3_New():
    return itkLabelToPointSetFilterISS3MSS3.New()

class itkLabelToPointSetFilterISS3MSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MSS3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3MSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3MSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MSS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MSS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MSS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MSS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MSS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3MSS3

        Create a new object of the class itkLabelToPointSetFilterISS3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3MSS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MSS3_swigregister(itkLabelToPointSetFilterISS3MSS3)

def itkLabelToPointSetFilterISS3MUC3_New():
    return itkLabelToPointSetFilterISS3MUC3.New()

class itkLabelToPointSetFilterISS3MUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MUC3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3MUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3MUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUC3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUC3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUC3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUC3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUC3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3MUC3

        Create a new object of the class itkLabelToPointSetFilterISS3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3MUC3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUC3_swigregister(itkLabelToPointSetFilterISS3MUC3)

def itkLabelToPointSetFilterISS3MUS3_New():
    return itkLabelToPointSetFilterISS3MUS3.New()

class itkLabelToPointSetFilterISS3MUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MUS3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3MUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3MUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3MUS3

        Create a new object of the class itkLabelToPointSetFilterISS3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3MUS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3MUS3_swigregister(itkLabelToPointSetFilterISS3MUS3)

def itkLabelToPointSetFilterISS3PSD3_New():
    return itkLabelToPointSetFilterISS3PSD3.New()

class itkLabelToPointSetFilterISS3PSD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSD3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3PSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3PSD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3PSD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSD3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSD3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSD3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSD3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSD3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3PSD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3PSD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3PSD3

        Create a new object of the class itkLabelToPointSetFilterISS3PSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3PSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3PSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3PSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3PSD3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSD3_swigregister(itkLabelToPointSetFilterISS3PSD3)

def itkLabelToPointSetFilterISS3PSF3_New():
    return itkLabelToPointSetFilterISS3PSF3.New()

class itkLabelToPointSetFilterISS3PSF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSF3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3PSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3PSF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3PSF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSF3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSF3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSF3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSF3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSF3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3PSF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3PSF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3PSF3

        Create a new object of the class itkLabelToPointSetFilterISS3PSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3PSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3PSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3PSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3PSF3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSF3_swigregister(itkLabelToPointSetFilterISS3PSF3)

def itkLabelToPointSetFilterISS3PSSS3_New():
    return itkLabelToPointSetFilterISS3PSSS3.New()

class itkLabelToPointSetFilterISS3PSSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSSS3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3PSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3PSSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3PSSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSSS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSSS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSSS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSSS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSSS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3PSSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3PSSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3PSSS3

        Create a new object of the class itkLabelToPointSetFilterISS3PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3PSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3PSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3PSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3PSSS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSSS3_swigregister(itkLabelToPointSetFilterISS3PSSS3)

def itkLabelToPointSetFilterISS3PSUC3_New():
    return itkLabelToPointSetFilterISS3PSUC3.New()

class itkLabelToPointSetFilterISS3PSUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSUC3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3PSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3PSUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3PSUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUC3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUC3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUC3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUC3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUC3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3PSUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3PSUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3PSUC3

        Create a new object of the class itkLabelToPointSetFilterISS3PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3PSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3PSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3PSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3PSUC3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUC3_swigregister(itkLabelToPointSetFilterISS3PSUC3)

def itkLabelToPointSetFilterISS3PSUS3_New():
    return itkLabelToPointSetFilterISS3PSUS3.New()

class itkLabelToPointSetFilterISS3PSUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSUS3):
    r"""Proxy of C++ itkLabelToPointSetFilterISS3PSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS3PSUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS3PSUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS3PSUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS3PSUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS3PSUS3

        Create a new object of the class itkLabelToPointSetFilterISS3PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS3PSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS3PSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS3PSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS3PSUS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS3PSUS3_swigregister(itkLabelToPointSetFilterISS3PSUS3)

def itkLabelToPointSetFilterISS4MD4_New():
    return itkLabelToPointSetFilterISS4MD4.New()

class itkLabelToPointSetFilterISS4MD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MD4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4MD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4MD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4MD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MD4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MD4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MD4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MD4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MD4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4MD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4MD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4MD4

        Create a new object of the class itkLabelToPointSetFilterISS4MD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4MD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4MD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4MD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4MD4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MD4_swigregister(itkLabelToPointSetFilterISS4MD4)

def itkLabelToPointSetFilterISS4MF4_New():
    return itkLabelToPointSetFilterISS4MF4.New()

class itkLabelToPointSetFilterISS4MF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MF4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4MF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4MF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4MF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MF4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MF4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MF4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MF4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MF4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4MF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4MF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4MF4

        Create a new object of the class itkLabelToPointSetFilterISS4MF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4MF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4MF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4MF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4MF4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MF4_swigregister(itkLabelToPointSetFilterISS4MF4)

def itkLabelToPointSetFilterISS4MSS4_New():
    return itkLabelToPointSetFilterISS4MSS4.New()

class itkLabelToPointSetFilterISS4MSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MSS4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4MSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4MSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4MSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MSS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MSS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MSS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MSS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MSS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4MSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4MSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4MSS4

        Create a new object of the class itkLabelToPointSetFilterISS4MSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4MSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4MSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4MSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4MSS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MSS4_swigregister(itkLabelToPointSetFilterISS4MSS4)

def itkLabelToPointSetFilterISS4MUC4_New():
    return itkLabelToPointSetFilterISS4MUC4.New()

class itkLabelToPointSetFilterISS4MUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MUC4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4MUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4MUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4MUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUC4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUC4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUC4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUC4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUC4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4MUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4MUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4MUC4

        Create a new object of the class itkLabelToPointSetFilterISS4MUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4MUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4MUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4MUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4MUC4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUC4_swigregister(itkLabelToPointSetFilterISS4MUC4)

def itkLabelToPointSetFilterISS4MUS4_New():
    return itkLabelToPointSetFilterISS4MUS4.New()

class itkLabelToPointSetFilterISS4MUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MUS4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4MUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4MUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4MUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4MUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4MUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4MUS4

        Create a new object of the class itkLabelToPointSetFilterISS4MUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4MUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4MUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4MUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4MUS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4MUS4_swigregister(itkLabelToPointSetFilterISS4MUS4)

def itkLabelToPointSetFilterISS4PSD4_New():
    return itkLabelToPointSetFilterISS4PSD4.New()

class itkLabelToPointSetFilterISS4PSD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSD4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4PSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4PSD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4PSD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSD4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSD4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSD4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSD4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSD4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4PSD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4PSD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4PSD4

        Create a new object of the class itkLabelToPointSetFilterISS4PSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4PSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4PSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4PSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4PSD4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSD4_swigregister(itkLabelToPointSetFilterISS4PSD4)

def itkLabelToPointSetFilterISS4PSF4_New():
    return itkLabelToPointSetFilterISS4PSF4.New()

class itkLabelToPointSetFilterISS4PSF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSF4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4PSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4PSF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4PSF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSF4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSF4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSF4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSF4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSF4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4PSF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4PSF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4PSF4

        Create a new object of the class itkLabelToPointSetFilterISS4PSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4PSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4PSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4PSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4PSF4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSF4_swigregister(itkLabelToPointSetFilterISS4PSF4)

def itkLabelToPointSetFilterISS4PSSS4_New():
    return itkLabelToPointSetFilterISS4PSSS4.New()

class itkLabelToPointSetFilterISS4PSSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSSS4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4PSSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4PSSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4PSSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSSS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSSS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSSS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSSS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSSS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4PSSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4PSSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4PSSS4

        Create a new object of the class itkLabelToPointSetFilterISS4PSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4PSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4PSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4PSSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4PSSS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSSS4_swigregister(itkLabelToPointSetFilterISS4PSSS4)

def itkLabelToPointSetFilterISS4PSUC4_New():
    return itkLabelToPointSetFilterISS4PSUC4.New()

class itkLabelToPointSetFilterISS4PSUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSUC4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4PSUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4PSUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4PSUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUC4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUC4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUC4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUC4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUC4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4PSUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4PSUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4PSUC4

        Create a new object of the class itkLabelToPointSetFilterISS4PSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4PSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4PSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4PSUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4PSUC4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUC4_swigregister(itkLabelToPointSetFilterISS4PSUC4)

def itkLabelToPointSetFilterISS4PSUS4_New():
    return itkLabelToPointSetFilterISS4PSUS4.New()

class itkLabelToPointSetFilterISS4PSUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSUS4):
    r"""Proxy of C++ itkLabelToPointSetFilterISS4PSUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterISS4PSUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterISS4PSUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterISS4PSUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterISS4PSUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterISS4PSUS4

        Create a new object of the class itkLabelToPointSetFilterISS4PSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterISS4PSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterISS4PSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterISS4PSUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterISS4PSUS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterISS4PSUS4_swigregister(itkLabelToPointSetFilterISS4PSUS4)

def itkLabelToPointSetFilterIUC2MD2_New():
    return itkLabelToPointSetFilterIUC2MD2.New()

class itkLabelToPointSetFilterIUC2MD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MD2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2MD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2MD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2MD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MD2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MD2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MD2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MD2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MD2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2MD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2MD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2MD2

        Create a new object of the class itkLabelToPointSetFilterIUC2MD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2MD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2MD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2MD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2MD2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MD2_swigregister(itkLabelToPointSetFilterIUC2MD2)

def itkLabelToPointSetFilterIUC2MF2_New():
    return itkLabelToPointSetFilterIUC2MF2.New()

class itkLabelToPointSetFilterIUC2MF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MF2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2MF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2MF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2MF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MF2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MF2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MF2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MF2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MF2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2MF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2MF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2MF2

        Create a new object of the class itkLabelToPointSetFilterIUC2MF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2MF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2MF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2MF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2MF2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MF2_swigregister(itkLabelToPointSetFilterIUC2MF2)

def itkLabelToPointSetFilterIUC2MSS2_New():
    return itkLabelToPointSetFilterIUC2MSS2.New()

class itkLabelToPointSetFilterIUC2MSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MSS2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2MSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2MSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2MSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MSS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MSS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MSS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MSS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MSS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2MSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2MSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2MSS2

        Create a new object of the class itkLabelToPointSetFilterIUC2MSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2MSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2MSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2MSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2MSS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MSS2_swigregister(itkLabelToPointSetFilterIUC2MSS2)

def itkLabelToPointSetFilterIUC2MUC2_New():
    return itkLabelToPointSetFilterIUC2MUC2.New()

class itkLabelToPointSetFilterIUC2MUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MUC2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2MUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2MUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2MUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUC2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUC2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUC2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUC2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUC2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2MUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2MUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2MUC2

        Create a new object of the class itkLabelToPointSetFilterIUC2MUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2MUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2MUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2MUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2MUC2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUC2_swigregister(itkLabelToPointSetFilterIUC2MUC2)

def itkLabelToPointSetFilterIUC2MUS2_New():
    return itkLabelToPointSetFilterIUC2MUS2.New()

class itkLabelToPointSetFilterIUC2MUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MUS2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2MUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2MUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2MUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2MUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2MUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2MUS2

        Create a new object of the class itkLabelToPointSetFilterIUC2MUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2MUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2MUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2MUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2MUS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2MUS2_swigregister(itkLabelToPointSetFilterIUC2MUS2)

def itkLabelToPointSetFilterIUC2PSD2_New():
    return itkLabelToPointSetFilterIUC2PSD2.New()

class itkLabelToPointSetFilterIUC2PSD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSD2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2PSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2PSD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2PSD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSD2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSD2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSD2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSD2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSD2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2PSD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2PSD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2PSD2

        Create a new object of the class itkLabelToPointSetFilterIUC2PSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2PSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2PSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2PSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2PSD2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSD2_swigregister(itkLabelToPointSetFilterIUC2PSD2)

def itkLabelToPointSetFilterIUC2PSF2_New():
    return itkLabelToPointSetFilterIUC2PSF2.New()

class itkLabelToPointSetFilterIUC2PSF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSF2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2PSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2PSF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2PSF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSF2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSF2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSF2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSF2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSF2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2PSF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2PSF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2PSF2

        Create a new object of the class itkLabelToPointSetFilterIUC2PSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2PSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2PSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2PSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2PSF2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSF2_swigregister(itkLabelToPointSetFilterIUC2PSF2)

def itkLabelToPointSetFilterIUC2PSSS2_New():
    return itkLabelToPointSetFilterIUC2PSSS2.New()

class itkLabelToPointSetFilterIUC2PSSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSSS2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2PSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2PSSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2PSSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSSS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSSS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSSS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSSS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSSS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2PSSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2PSSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2PSSS2

        Create a new object of the class itkLabelToPointSetFilterIUC2PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2PSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2PSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2PSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2PSSS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSSS2_swigregister(itkLabelToPointSetFilterIUC2PSSS2)

def itkLabelToPointSetFilterIUC2PSUC2_New():
    return itkLabelToPointSetFilterIUC2PSUC2.New()

class itkLabelToPointSetFilterIUC2PSUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSUC2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2PSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2PSUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2PSUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUC2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUC2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUC2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUC2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUC2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2PSUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2PSUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2PSUC2

        Create a new object of the class itkLabelToPointSetFilterIUC2PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2PSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2PSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2PSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2PSUC2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUC2_swigregister(itkLabelToPointSetFilterIUC2PSUC2)

def itkLabelToPointSetFilterIUC2PSUS2_New():
    return itkLabelToPointSetFilterIUC2PSUS2.New()

class itkLabelToPointSetFilterIUC2PSUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSUS2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC2PSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC2PSUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC2PSUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC2PSUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC2PSUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC2PSUS2

        Create a new object of the class itkLabelToPointSetFilterIUC2PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC2PSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC2PSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC2PSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC2PSUS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC2PSUS2_swigregister(itkLabelToPointSetFilterIUC2PSUS2)

def itkLabelToPointSetFilterIUC3MD3_New():
    return itkLabelToPointSetFilterIUC3MD3.New()

class itkLabelToPointSetFilterIUC3MD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MD3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3MD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3MD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MD3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MD3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MD3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MD3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MD3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3MD3

        Create a new object of the class itkLabelToPointSetFilterIUC3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3MD3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MD3_swigregister(itkLabelToPointSetFilterIUC3MD3)

def itkLabelToPointSetFilterIUC3MF3_New():
    return itkLabelToPointSetFilterIUC3MF3.New()

class itkLabelToPointSetFilterIUC3MF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MF3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3MF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3MF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MF3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MF3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MF3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MF3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MF3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3MF3

        Create a new object of the class itkLabelToPointSetFilterIUC3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3MF3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MF3_swigregister(itkLabelToPointSetFilterIUC3MF3)

def itkLabelToPointSetFilterIUC3MSS3_New():
    return itkLabelToPointSetFilterIUC3MSS3.New()

class itkLabelToPointSetFilterIUC3MSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MSS3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3MSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3MSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MSS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MSS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MSS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MSS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MSS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3MSS3

        Create a new object of the class itkLabelToPointSetFilterIUC3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3MSS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MSS3_swigregister(itkLabelToPointSetFilterIUC3MSS3)

def itkLabelToPointSetFilterIUC3MUC3_New():
    return itkLabelToPointSetFilterIUC3MUC3.New()

class itkLabelToPointSetFilterIUC3MUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MUC3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3MUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3MUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUC3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUC3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUC3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUC3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUC3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3MUC3

        Create a new object of the class itkLabelToPointSetFilterIUC3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3MUC3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUC3_swigregister(itkLabelToPointSetFilterIUC3MUC3)

def itkLabelToPointSetFilterIUC3MUS3_New():
    return itkLabelToPointSetFilterIUC3MUS3.New()

class itkLabelToPointSetFilterIUC3MUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MUS3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3MUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3MUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3MUS3

        Create a new object of the class itkLabelToPointSetFilterIUC3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3MUS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3MUS3_swigregister(itkLabelToPointSetFilterIUC3MUS3)

def itkLabelToPointSetFilterIUC3PSD3_New():
    return itkLabelToPointSetFilterIUC3PSD3.New()

class itkLabelToPointSetFilterIUC3PSD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSD3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3PSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3PSD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3PSD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSD3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSD3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSD3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSD3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSD3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3PSD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3PSD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3PSD3

        Create a new object of the class itkLabelToPointSetFilterIUC3PSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3PSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3PSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3PSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3PSD3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSD3_swigregister(itkLabelToPointSetFilterIUC3PSD3)

def itkLabelToPointSetFilterIUC3PSF3_New():
    return itkLabelToPointSetFilterIUC3PSF3.New()

class itkLabelToPointSetFilterIUC3PSF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSF3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3PSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3PSF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3PSF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSF3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSF3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSF3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSF3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSF3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3PSF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3PSF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3PSF3

        Create a new object of the class itkLabelToPointSetFilterIUC3PSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3PSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3PSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3PSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3PSF3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSF3_swigregister(itkLabelToPointSetFilterIUC3PSF3)

def itkLabelToPointSetFilterIUC3PSSS3_New():
    return itkLabelToPointSetFilterIUC3PSSS3.New()

class itkLabelToPointSetFilterIUC3PSSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSSS3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3PSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3PSSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3PSSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSSS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSSS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSSS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSSS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSSS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3PSSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3PSSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3PSSS3

        Create a new object of the class itkLabelToPointSetFilterIUC3PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3PSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3PSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3PSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3PSSS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSSS3_swigregister(itkLabelToPointSetFilterIUC3PSSS3)

def itkLabelToPointSetFilterIUC3PSUC3_New():
    return itkLabelToPointSetFilterIUC3PSUC3.New()

class itkLabelToPointSetFilterIUC3PSUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSUC3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3PSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3PSUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3PSUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUC3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUC3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUC3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUC3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUC3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3PSUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3PSUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3PSUC3

        Create a new object of the class itkLabelToPointSetFilterIUC3PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3PSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3PSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3PSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3PSUC3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUC3_swigregister(itkLabelToPointSetFilterIUC3PSUC3)

def itkLabelToPointSetFilterIUC3PSUS3_New():
    return itkLabelToPointSetFilterIUC3PSUS3.New()

class itkLabelToPointSetFilterIUC3PSUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSUS3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC3PSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC3PSUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC3PSUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC3PSUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC3PSUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC3PSUS3

        Create a new object of the class itkLabelToPointSetFilterIUC3PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC3PSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC3PSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC3PSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC3PSUS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC3PSUS3_swigregister(itkLabelToPointSetFilterIUC3PSUS3)

def itkLabelToPointSetFilterIUC4MD4_New():
    return itkLabelToPointSetFilterIUC4MD4.New()

class itkLabelToPointSetFilterIUC4MD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MD4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4MD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4MD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4MD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MD4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MD4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MD4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MD4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MD4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4MD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4MD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4MD4

        Create a new object of the class itkLabelToPointSetFilterIUC4MD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4MD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4MD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4MD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4MD4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MD4_swigregister(itkLabelToPointSetFilterIUC4MD4)

def itkLabelToPointSetFilterIUC4MF4_New():
    return itkLabelToPointSetFilterIUC4MF4.New()

class itkLabelToPointSetFilterIUC4MF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MF4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4MF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4MF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4MF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MF4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MF4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MF4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MF4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MF4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4MF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4MF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4MF4

        Create a new object of the class itkLabelToPointSetFilterIUC4MF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4MF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4MF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4MF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4MF4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MF4_swigregister(itkLabelToPointSetFilterIUC4MF4)

def itkLabelToPointSetFilterIUC4MSS4_New():
    return itkLabelToPointSetFilterIUC4MSS4.New()

class itkLabelToPointSetFilterIUC4MSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MSS4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4MSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4MSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4MSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MSS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MSS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MSS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MSS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MSS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4MSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4MSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4MSS4

        Create a new object of the class itkLabelToPointSetFilterIUC4MSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4MSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4MSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4MSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4MSS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MSS4_swigregister(itkLabelToPointSetFilterIUC4MSS4)

def itkLabelToPointSetFilterIUC4MUC4_New():
    return itkLabelToPointSetFilterIUC4MUC4.New()

class itkLabelToPointSetFilterIUC4MUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MUC4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4MUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4MUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4MUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUC4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUC4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUC4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUC4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUC4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4MUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4MUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4MUC4

        Create a new object of the class itkLabelToPointSetFilterIUC4MUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4MUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4MUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4MUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4MUC4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUC4_swigregister(itkLabelToPointSetFilterIUC4MUC4)

def itkLabelToPointSetFilterIUC4MUS4_New():
    return itkLabelToPointSetFilterIUC4MUS4.New()

class itkLabelToPointSetFilterIUC4MUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MUS4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4MUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4MUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4MUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4MUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4MUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4MUS4

        Create a new object of the class itkLabelToPointSetFilterIUC4MUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4MUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4MUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4MUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4MUS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4MUS4_swigregister(itkLabelToPointSetFilterIUC4MUS4)

def itkLabelToPointSetFilterIUC4PSD4_New():
    return itkLabelToPointSetFilterIUC4PSD4.New()

class itkLabelToPointSetFilterIUC4PSD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSD4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4PSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4PSD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4PSD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSD4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSD4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSD4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSD4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSD4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4PSD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4PSD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4PSD4

        Create a new object of the class itkLabelToPointSetFilterIUC4PSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4PSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4PSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4PSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4PSD4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSD4_swigregister(itkLabelToPointSetFilterIUC4PSD4)

def itkLabelToPointSetFilterIUC4PSF4_New():
    return itkLabelToPointSetFilterIUC4PSF4.New()

class itkLabelToPointSetFilterIUC4PSF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSF4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4PSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4PSF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4PSF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSF4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSF4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSF4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSF4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSF4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4PSF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4PSF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4PSF4

        Create a new object of the class itkLabelToPointSetFilterIUC4PSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4PSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4PSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4PSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4PSF4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSF4_swigregister(itkLabelToPointSetFilterIUC4PSF4)

def itkLabelToPointSetFilterIUC4PSSS4_New():
    return itkLabelToPointSetFilterIUC4PSSS4.New()

class itkLabelToPointSetFilterIUC4PSSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSSS4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4PSSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4PSSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4PSSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSSS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSSS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSSS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSSS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSSS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4PSSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4PSSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4PSSS4

        Create a new object of the class itkLabelToPointSetFilterIUC4PSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4PSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4PSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4PSSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4PSSS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSSS4_swigregister(itkLabelToPointSetFilterIUC4PSSS4)

def itkLabelToPointSetFilterIUC4PSUC4_New():
    return itkLabelToPointSetFilterIUC4PSUC4.New()

class itkLabelToPointSetFilterIUC4PSUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSUC4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4PSUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4PSUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4PSUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUC4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUC4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUC4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUC4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUC4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4PSUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4PSUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4PSUC4

        Create a new object of the class itkLabelToPointSetFilterIUC4PSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4PSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4PSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4PSUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4PSUC4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUC4_swigregister(itkLabelToPointSetFilterIUC4PSUC4)

def itkLabelToPointSetFilterIUC4PSUS4_New():
    return itkLabelToPointSetFilterIUC4PSUS4.New()

class itkLabelToPointSetFilterIUC4PSUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSUS4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUC4PSUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUC4PSUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUC4PSUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUC4PSUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUC4PSUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUC4PSUS4

        Create a new object of the class itkLabelToPointSetFilterIUC4PSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUC4PSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUC4PSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUC4PSUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUC4PSUS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUC4PSUS4_swigregister(itkLabelToPointSetFilterIUC4PSUS4)

def itkLabelToPointSetFilterIUS2MD2_New():
    return itkLabelToPointSetFilterIUS2MD2.New()

class itkLabelToPointSetFilterIUS2MD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MD2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2MD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2MD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2MD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MD2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MD2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MD2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MD2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MD2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2MD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2MD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2MD2

        Create a new object of the class itkLabelToPointSetFilterIUS2MD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2MD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2MD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2MD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2MD2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MD2_swigregister(itkLabelToPointSetFilterIUS2MD2)

def itkLabelToPointSetFilterIUS2MF2_New():
    return itkLabelToPointSetFilterIUS2MF2.New()

class itkLabelToPointSetFilterIUS2MF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MF2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2MF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2MF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2MF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MF2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MF2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MF2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MF2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MF2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2MF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2MF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2MF2

        Create a new object of the class itkLabelToPointSetFilterIUS2MF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2MF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2MF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2MF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2MF2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MF2_swigregister(itkLabelToPointSetFilterIUS2MF2)

def itkLabelToPointSetFilterIUS2MSS2_New():
    return itkLabelToPointSetFilterIUS2MSS2.New()

class itkLabelToPointSetFilterIUS2MSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MSS2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2MSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2MSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2MSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MSS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MSS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MSS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MSS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MSS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2MSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2MSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2MSS2

        Create a new object of the class itkLabelToPointSetFilterIUS2MSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2MSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2MSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2MSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2MSS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MSS2_swigregister(itkLabelToPointSetFilterIUS2MSS2)

def itkLabelToPointSetFilterIUS2MUC2_New():
    return itkLabelToPointSetFilterIUS2MUC2.New()

class itkLabelToPointSetFilterIUS2MUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MUC2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2MUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2MUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2MUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUC2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUC2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUC2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUC2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUC2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2MUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2MUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2MUC2

        Create a new object of the class itkLabelToPointSetFilterIUS2MUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2MUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2MUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2MUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2MUC2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUC2_swigregister(itkLabelToPointSetFilterIUS2MUC2)

def itkLabelToPointSetFilterIUS2MUS2_New():
    return itkLabelToPointSetFilterIUS2MUS2.New()

class itkLabelToPointSetFilterIUS2MUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MUS2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2MUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2MUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2MUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2MUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2MUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2MUS2

        Create a new object of the class itkLabelToPointSetFilterIUS2MUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2MUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2MUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2MUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2MUS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2MUS2_swigregister(itkLabelToPointSetFilterIUS2MUS2)

def itkLabelToPointSetFilterIUS2PSD2_New():
    return itkLabelToPointSetFilterIUS2PSD2.New()

class itkLabelToPointSetFilterIUS2PSD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSD2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2PSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2PSD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2PSD2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSD2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSD2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSD2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSD2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSD2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2PSD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2PSD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2PSD2

        Create a new object of the class itkLabelToPointSetFilterIUS2PSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2PSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2PSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2PSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2PSD2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSD2_swigregister(itkLabelToPointSetFilterIUS2PSD2)

def itkLabelToPointSetFilterIUS2PSF2_New():
    return itkLabelToPointSetFilterIUS2PSF2.New()

class itkLabelToPointSetFilterIUS2PSF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSF2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2PSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2PSF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2PSF2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSF2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSF2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSF2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSF2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSF2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2PSF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2PSF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2PSF2

        Create a new object of the class itkLabelToPointSetFilterIUS2PSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2PSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2PSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2PSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2PSF2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSF2_swigregister(itkLabelToPointSetFilterIUS2PSF2)

def itkLabelToPointSetFilterIUS2PSSS2_New():
    return itkLabelToPointSetFilterIUS2PSSS2.New()

class itkLabelToPointSetFilterIUS2PSSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSSS2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2PSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2PSSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2PSSS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSSS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSSS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSSS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSSS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSSS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2PSSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2PSSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2PSSS2

        Create a new object of the class itkLabelToPointSetFilterIUS2PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2PSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2PSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2PSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2PSSS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSSS2_swigregister(itkLabelToPointSetFilterIUS2PSSS2)

def itkLabelToPointSetFilterIUS2PSUC2_New():
    return itkLabelToPointSetFilterIUS2PSUC2.New()

class itkLabelToPointSetFilterIUS2PSUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSUC2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2PSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2PSUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2PSUC2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUC2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUC2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUC2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUC2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUC2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2PSUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2PSUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2PSUC2

        Create a new object of the class itkLabelToPointSetFilterIUS2PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2PSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2PSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2PSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2PSUC2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUC2_swigregister(itkLabelToPointSetFilterIUS2PSUC2)

def itkLabelToPointSetFilterIUS2PSUS2_New():
    return itkLabelToPointSetFilterIUS2PSUS2.New()

class itkLabelToPointSetFilterIUS2PSUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSUS2):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS2PSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS2PSUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS2PSUS2_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUS2_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUS2_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUS2_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUS2_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUS2_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS2PSUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS2PSUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS2PSUS2

        Create a new object of the class itkLabelToPointSetFilterIUS2PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS2PSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS2PSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS2PSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS2PSUS2 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS2PSUS2_swigregister(itkLabelToPointSetFilterIUS2PSUS2)

def itkLabelToPointSetFilterIUS3MD3_New():
    return itkLabelToPointSetFilterIUS3MD3.New()

class itkLabelToPointSetFilterIUS3MD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MD3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3MD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3MD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MD3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MD3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MD3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MD3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MD3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3MD3

        Create a new object of the class itkLabelToPointSetFilterIUS3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3MD3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MD3_swigregister(itkLabelToPointSetFilterIUS3MD3)

def itkLabelToPointSetFilterIUS3MF3_New():
    return itkLabelToPointSetFilterIUS3MF3.New()

class itkLabelToPointSetFilterIUS3MF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MF3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3MF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3MF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MF3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MF3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MF3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MF3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MF3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3MF3

        Create a new object of the class itkLabelToPointSetFilterIUS3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3MF3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MF3_swigregister(itkLabelToPointSetFilterIUS3MF3)

def itkLabelToPointSetFilterIUS3MSS3_New():
    return itkLabelToPointSetFilterIUS3MSS3.New()

class itkLabelToPointSetFilterIUS3MSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MSS3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3MSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3MSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MSS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MSS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MSS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MSS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MSS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3MSS3

        Create a new object of the class itkLabelToPointSetFilterIUS3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3MSS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MSS3_swigregister(itkLabelToPointSetFilterIUS3MSS3)

def itkLabelToPointSetFilterIUS3MUC3_New():
    return itkLabelToPointSetFilterIUS3MUC3.New()

class itkLabelToPointSetFilterIUS3MUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MUC3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3MUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3MUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUC3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUC3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUC3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUC3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUC3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3MUC3

        Create a new object of the class itkLabelToPointSetFilterIUS3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3MUC3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUC3_swigregister(itkLabelToPointSetFilterIUS3MUC3)

def itkLabelToPointSetFilterIUS3MUS3_New():
    return itkLabelToPointSetFilterIUS3MUS3.New()

class itkLabelToPointSetFilterIUS3MUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MUS3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3MUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3MUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3MUS3

        Create a new object of the class itkLabelToPointSetFilterIUS3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3MUS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3MUS3_swigregister(itkLabelToPointSetFilterIUS3MUS3)

def itkLabelToPointSetFilterIUS3PSD3_New():
    return itkLabelToPointSetFilterIUS3PSD3.New()

class itkLabelToPointSetFilterIUS3PSD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSD3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3PSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3PSD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3PSD3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSD3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSD3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSD3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSD3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSD3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3PSD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3PSD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3PSD3

        Create a new object of the class itkLabelToPointSetFilterIUS3PSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3PSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3PSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3PSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3PSD3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSD3_swigregister(itkLabelToPointSetFilterIUS3PSD3)

def itkLabelToPointSetFilterIUS3PSF3_New():
    return itkLabelToPointSetFilterIUS3PSF3.New()

class itkLabelToPointSetFilterIUS3PSF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSF3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3PSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3PSF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3PSF3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSF3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSF3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSF3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSF3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSF3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3PSF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3PSF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3PSF3

        Create a new object of the class itkLabelToPointSetFilterIUS3PSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3PSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3PSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3PSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3PSF3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSF3_swigregister(itkLabelToPointSetFilterIUS3PSF3)

def itkLabelToPointSetFilterIUS3PSSS3_New():
    return itkLabelToPointSetFilterIUS3PSSS3.New()

class itkLabelToPointSetFilterIUS3PSSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSSS3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3PSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3PSSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3PSSS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSSS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSSS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSSS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSSS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSSS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3PSSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3PSSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3PSSS3

        Create a new object of the class itkLabelToPointSetFilterIUS3PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3PSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3PSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3PSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3PSSS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSSS3_swigregister(itkLabelToPointSetFilterIUS3PSSS3)

def itkLabelToPointSetFilterIUS3PSUC3_New():
    return itkLabelToPointSetFilterIUS3PSUC3.New()

class itkLabelToPointSetFilterIUS3PSUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSUC3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3PSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3PSUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3PSUC3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUC3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUC3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUC3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUC3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUC3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3PSUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3PSUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3PSUC3

        Create a new object of the class itkLabelToPointSetFilterIUS3PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3PSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3PSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3PSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3PSUC3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUC3_swigregister(itkLabelToPointSetFilterIUS3PSUC3)

def itkLabelToPointSetFilterIUS3PSUS3_New():
    return itkLabelToPointSetFilterIUS3PSUS3.New()

class itkLabelToPointSetFilterIUS3PSUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSUS3):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS3PSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS3PSUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS3PSUS3_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUS3_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUS3_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUS3_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUS3_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUS3_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS3PSUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS3PSUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS3PSUS3

        Create a new object of the class itkLabelToPointSetFilterIUS3PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS3PSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS3PSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS3PSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS3PSUS3 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS3PSUS3_swigregister(itkLabelToPointSetFilterIUS3PSUS3)

def itkLabelToPointSetFilterIUS4MD4_New():
    return itkLabelToPointSetFilterIUS4MD4.New()

class itkLabelToPointSetFilterIUS4MD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MD4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4MD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4MD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4MD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MD4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MD4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MD4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MD4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MD4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4MD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4MD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4MD4

        Create a new object of the class itkLabelToPointSetFilterIUS4MD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4MD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4MD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4MD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4MD4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MD4_swigregister(itkLabelToPointSetFilterIUS4MD4)

def itkLabelToPointSetFilterIUS4MF4_New():
    return itkLabelToPointSetFilterIUS4MF4.New()

class itkLabelToPointSetFilterIUS4MF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MF4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4MF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4MF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4MF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MF4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MF4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MF4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MF4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MF4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4MF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4MF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4MF4

        Create a new object of the class itkLabelToPointSetFilterIUS4MF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4MF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4MF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4MF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4MF4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MF4_swigregister(itkLabelToPointSetFilterIUS4MF4)

def itkLabelToPointSetFilterIUS4MSS4_New():
    return itkLabelToPointSetFilterIUS4MSS4.New()

class itkLabelToPointSetFilterIUS4MSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MSS4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4MSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4MSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4MSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MSS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MSS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MSS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MSS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MSS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4MSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4MSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4MSS4

        Create a new object of the class itkLabelToPointSetFilterIUS4MSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4MSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4MSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4MSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4MSS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MSS4_swigregister(itkLabelToPointSetFilterIUS4MSS4)

def itkLabelToPointSetFilterIUS4MUC4_New():
    return itkLabelToPointSetFilterIUS4MUC4.New()

class itkLabelToPointSetFilterIUS4MUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MUC4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4MUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4MUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4MUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUC4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUC4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUC4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUC4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUC4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4MUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4MUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4MUC4

        Create a new object of the class itkLabelToPointSetFilterIUS4MUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4MUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4MUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4MUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4MUC4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUC4_swigregister(itkLabelToPointSetFilterIUS4MUC4)

def itkLabelToPointSetFilterIUS4MUS4_New():
    return itkLabelToPointSetFilterIUS4MUS4.New()

class itkLabelToPointSetFilterIUS4MUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MUS4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4MUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4MUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4MUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4MUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4MUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4MUS4

        Create a new object of the class itkLabelToPointSetFilterIUS4MUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4MUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4MUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4MUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4MUS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4MUS4_swigregister(itkLabelToPointSetFilterIUS4MUS4)

def itkLabelToPointSetFilterIUS4PSD4_New():
    return itkLabelToPointSetFilterIUS4PSD4.New()

class itkLabelToPointSetFilterIUS4PSD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSD4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4PSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4PSD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4PSD4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSD4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSD4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSD4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSD4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSD4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4PSD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4PSD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4PSD4

        Create a new object of the class itkLabelToPointSetFilterIUS4PSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4PSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4PSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4PSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4PSD4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSD4_swigregister(itkLabelToPointSetFilterIUS4PSD4)

def itkLabelToPointSetFilterIUS4PSF4_New():
    return itkLabelToPointSetFilterIUS4PSF4.New()

class itkLabelToPointSetFilterIUS4PSF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSF4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4PSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4PSF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4PSF4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSF4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSF4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSF4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSF4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSF4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4PSF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4PSF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4PSF4

        Create a new object of the class itkLabelToPointSetFilterIUS4PSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4PSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4PSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4PSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4PSF4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSF4_swigregister(itkLabelToPointSetFilterIUS4PSF4)

def itkLabelToPointSetFilterIUS4PSSS4_New():
    return itkLabelToPointSetFilterIUS4PSSS4.New()

class itkLabelToPointSetFilterIUS4PSSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSSS4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4PSSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4PSSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4PSSS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSSS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSSS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSSS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSSS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSSS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4PSSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4PSSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4PSSS4

        Create a new object of the class itkLabelToPointSetFilterIUS4PSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4PSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4PSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4PSSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4PSSS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSSS4_swigregister(itkLabelToPointSetFilterIUS4PSSS4)

def itkLabelToPointSetFilterIUS4PSUC4_New():
    return itkLabelToPointSetFilterIUS4PSUC4.New()

class itkLabelToPointSetFilterIUS4PSUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSUC4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4PSUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4PSUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4PSUC4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUC4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUC4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUC4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUC4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUC4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4PSUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4PSUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4PSUC4

        Create a new object of the class itkLabelToPointSetFilterIUS4PSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4PSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4PSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4PSUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4PSUC4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUC4_swigregister(itkLabelToPointSetFilterIUS4PSUC4)

def itkLabelToPointSetFilterIUS4PSUS4_New():
    return itkLabelToPointSetFilterIUS4PSUS4.New()

class itkLabelToPointSetFilterIUS4PSUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSUS4):
    r"""Proxy of C++ itkLabelToPointSetFilterIUS4PSUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToPointSetFilterIUS4PSUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToPointSetFilterIUS4PSUS4_Pointer"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUS4_SetInput(self, inputImage)

    def SetSamplingPercentage(self, _arg):
        r"""
        SetSamplingPercentage(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUS4_SetSamplingPercentage(self, _arg)

    def GetSamplingPercentage(self):
        r"""GetSamplingPercentage(self) -> double"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUS4_GetSamplingPercentage(self)

    def SetSamplingRandomSeed(self, _arg):
        r"""
        SetSamplingRandomSeed(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUS4_SetSamplingRandomSeed(self, _arg)

    def GetSamplingRandomSeed(self):
        r"""GetSamplingRandomSeed(self) -> int"""
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUS4_GetSamplingRandomSeed(self)
    __swig_destroy__ = _itkLabelToPointSetFilterPython.delete_itkLabelToPointSetFilterIUS4PSUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToPointSetFilterIUS4PSUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToPointSetFilterIUS4PSUS4

        Create a new object of the class itkLabelToPointSetFilterIUS4PSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToPointSetFilterIUS4PSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToPointSetFilterIUS4PSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToPointSetFilterIUS4PSUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToPointSetFilterIUS4PSUS4 in _itkLabelToPointSetFilterPython:
_itkLabelToPointSetFilterPython.itkLabelToPointSetFilterIUS4PSUS4_swigregister(itkLabelToPointSetFilterIUS4PSUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def label_to_point_set_filter(*args: itkt.ImageLike,  sampling_percentage: float=..., sampling_random_seed: int=..., output: itkt.Mesh=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for LabelToPointSetFilter"""
    import itk

    kwarg_typehints = { 'sampling_percentage':sampling_percentage,'sampling_random_seed':sampling_random_seed,'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelToPointSetFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_to_point_set_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.LabelPointSet.LabelToPointSetFilter
    label_to_point_set_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_to_point_set_filter.__doc__ = filter_object.__doc__




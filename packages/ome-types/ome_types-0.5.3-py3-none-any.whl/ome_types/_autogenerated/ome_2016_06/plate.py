from typing import List, Optional

from ome_types._autogenerated.ome_2016_06.annotation_ref import AnnotationRef
from ome_types._autogenerated.ome_2016_06.naming_convention import (
    NamingConvention,
)
from ome_types._autogenerated.ome_2016_06.plate_acquisition import (
    PlateAcquisition,
)
from ome_types._autogenerated.ome_2016_06.units_length import UnitsLength
from ome_types._autogenerated.ome_2016_06.well import Well
from ome_types._mixins._base_type import OMEType
from xsdata_pydantic_basemodel.pydantic_compat import Field

__NAMESPACE__ = "http://www.openmicroscopy.org/Schemas/OME/2016-06"


class Plate(OMEType):
    """This element identifies microtiter plates within a screen.

    A plate can belong to more than one screen. The Screen(s) that a
    plate belongs to are specified by the ScreenRef element. The Plate
    ID and Name attributes are required. The Wells in a plate are
    numbers from the top-left corner in a grid starting at zero. i.e.
    The top-left well of a plate is index (0,0)

    Attributes
    ----------
    description : None | str
        A description for the plate.
    wells : list[Well]
        (The Plate Wells).
    annotation_refs : list[AnnotationRef]
        (The Plate AnnotationRefs).
    plate_acquisitions : list[PlateAcquisition]
        (The Plate PlateAcquisitions).
    id : str
        (The Plate ID).
    name : None | str
        The Name identifies the plate to the user. It is used much like the ID, and
        so must be unique within the document. If a plate name is not available
        when one is needed it will be constructed in the following order: 1. If
        name is available use it. 2. If not use "Start time - End time" (NOTE: Not
        a subtraction! A string representation of the two times separated by a
        dash.) 3. If these times are not available use the Plate ID.
    status : None | str
        A textual annotation of the current state of the plate with respect to the
        experiment work-flow; e.g. 1. Seed cell: done; 2. Transfection: done;
        3. Gel doc: todo.
    external_identifier : None | str
        The ExternalIdentifier attribute may contain a reference to an external
        database.
    column_naming_convention : None | NamingConvention
        The ColumnNamingConvention
    row_naming_convention : None | NamingConvention
        The RowNamingConvention
    well_origin_x : None | float
        This defines the X position to use for the origin of the fields (individual
        images) taken in a well. It is used with the X in the WellSample to display
        the fields in the correct position relative to each other. Each Well in the
        plate has the same well origin. Units are set by WellOriginXUnit. In the
        OMERO clients by convention we display the WellOrigin in the center of the
        view.
    well_origin_x_unit : UnitsLength
        The units of the well origin in X - default:reference frame.
    well_origin_y : None | float
        This defines the Y position to use for the origin of the fields (individual
        images) taken in a well. It is used with the Y in the WellSample to display
        the fields in the correct position relative to each other. Each Well in the
        plate has the same well origin.  Units are set by WellOriginYUnit. In the
        OMERO clients by convention we display the WellOrigin in the center of the
        view.
    well_origin_y_unit : UnitsLength
        The units of the well origin in Y - default:reference frame.
    rows : None | int
        The number of rows in the plate
    columns : None | int
        The number of columns in the plate
    field_index : None | int
        The index of the WellSample to display as the default Field
    """

    class Meta:
        namespace = "http://www.openmicroscopy.org/Schemas/OME/2016-06"

    description: Optional[str] = Field(
        default=None,
        metadata={
            "name": "Description",
            "type": "Element",
            "white_space": "preserve",
        },
    )
    wells: List[Well] = Field(
        default_factory=list,
        metadata={
            "name": "Well",
            "type": "Element",
        },
    )
    annotation_refs: List[AnnotationRef] = Field(
        default_factory=list,
        metadata={
            "name": "AnnotationRef",
            "type": "Element",
        },
    )
    plate_acquisitions: List[PlateAcquisition] = Field(
        default_factory=list,
        metadata={
            "name": "PlateAcquisition",
            "type": "Element",
        },
    )
    id: str = Field(
        default="__auto_sequence__",
        metadata={
            "name": "ID",
            "type": "Attribute",
            "required": True,
            "pattern": r"(urn:lsid:([\w\-\.]+\.[\w\-\.]+)+:Plate:\S+)|(Plate:\S+)",
        },
        regex="(urn:lsid:([\\w\\-\\.]+\\.[\\w\\-\\.]+)+:Plate:\\S+)|(Plate:\\S+)",
    )
    name: Optional[str] = Field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Attribute",
        },
    )
    status: Optional[str] = Field(
        default=None,
        metadata={
            "name": "Status",
            "type": "Attribute",
        },
    )
    external_identifier: Optional[str] = Field(
        default=None,
        metadata={
            "name": "ExternalIdentifier",
            "type": "Attribute",
        },
    )
    column_naming_convention: Optional[NamingConvention] = Field(
        default=None,
        metadata={
            "name": "ColumnNamingConvention",
            "type": "Attribute",
        },
    )
    row_naming_convention: Optional[NamingConvention] = Field(
        default=None,
        metadata={
            "name": "RowNamingConvention",
            "type": "Attribute",
        },
    )
    well_origin_x: Optional[float] = Field(
        default=None,
        metadata={
            "name": "WellOriginX",
            "type": "Attribute",
        },
    )
    well_origin_x_unit: UnitsLength = Field(
        default=UnitsLength.REFERENCEFRAME,
        metadata={
            "name": "WellOriginXUnit",
            "type": "Attribute",
        },
    )
    well_origin_y: Optional[float] = Field(
        default=None,
        metadata={
            "name": "WellOriginY",
            "type": "Attribute",
        },
    )
    well_origin_y_unit: UnitsLength = Field(
        default=UnitsLength.REFERENCEFRAME,
        metadata={
            "name": "WellOriginYUnit",
            "type": "Attribute",
        },
    )
    rows: Optional[int] = Field(
        default=None,
        metadata={
            "name": "Rows",
            "type": "Attribute",
            "min_inclusive": 1,
        },
        ge=1,
    )
    columns: Optional[int] = Field(
        default=None,
        metadata={
            "name": "Columns",
            "type": "Attribute",
            "min_inclusive": 1,
        },
        ge=1,
    )
    field_index: Optional[int] = Field(
        default=None,
        metadata={
            "name": "FieldIndex",
            "type": "Attribute",
            "min_inclusive": 0,
        },
        ge=0,
    )

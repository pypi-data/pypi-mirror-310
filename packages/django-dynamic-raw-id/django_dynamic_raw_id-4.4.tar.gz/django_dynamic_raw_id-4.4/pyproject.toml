[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Poetry -------------------------------------------------------------------------------
[tool.poetry]
name = "django-dynamic-raw-id"
version = "4.4"
packages = [{include = "dynamic_raw_id"}]
description = "raw_id_fields widget replacement that handles display of an object's string value on change."
keywords = ["django", "widget", "field", "admin", "raw-id", "foreignkey"]
authors = ["Martin Mahner", "Seth Buntin", "Yann Malet"]
homepage = "https://github.com/lincolnloop/django-dynamic-raw-id"
license = "MIT"
readme = ["README.md", "CHANGELOG.md"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
]

[tool.poetry.urls]
Source = "https://github.com/lincolnloop/django-dynamic-raw-id"
Bugtracker = "https://github.com/lincolnloop/django-dynamic-raw-id/issues"

[tool.poetry.dependencies]
python = "^3.8"
django = ">=3.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
pytest-django = "^4.8.0"
pytest-selenium = "^4.1.0"
selenium = "^4.19.0"

# Ruff ---------------------------------------------------------------------------------
[tool.ruff]
target-version = "py38"
exclude = ["migrations"]
lint.select = ["ALL"]
lint.ignore = [
  "ANN101",   # Missing Type Annotation for "self"
  "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
  "ARG001",   # Unused function argument (request, ...)
  "ARG002",   # Unused method argument (*args, **kwargs)
  "D",        # Missing or badly formatted docstrings
  "FBT",      # Flake Boolean Trap (don't use arg=True in functions)

  "COM812",   # (ruff format) Checks for the absence of trailing commas
  "ISC001",   # (ruff format) Checks for implicitly concatenated strings on a single line
]

[tool.ruff.lint.extend-per-file-ignores]
"test_*.py" = [
  "ERA001",   # Found commented-out code
  "PLR2004",  # Magic value used in comparison,
  "S101",     # S101 Use of `assert` detected
]

# Testing ------------------------------------------------------------------------------
[tool.pytest.ini_options]
python_files = [
  "tests.py",
  "test_*.py",
  "*_tests.py"
]
addopts = """
    --ds=dynamic_raw_id.tests.testapp.settings
    --nomigrations
    --reuse-db
    --driver Firefox
"""
filterwarnings = [
  "ignore::RuntimeWarning"
]

[tool.coverage]
run.omit = [
  "dynamic_raw_id/tests/*",
]
report.exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "def __repr__",
]

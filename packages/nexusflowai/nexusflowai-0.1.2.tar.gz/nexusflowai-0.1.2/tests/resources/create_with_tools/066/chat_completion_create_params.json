{
    "temperature": 0.0,
    "max_tokens": 1024,
    "model": "nexus-tool-use-20241029-Q",
    "messages": [],
    "tools": [
        {
            "type": "function",
            "function": {
                "name": "search_data",
                "description": "Gets the specified columns from the given table name. All tables return information about all stocks; please use apply_computation with the `filter` argument to get specific stock information.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "table_name": {
                            "type": "string",
                            "description": "A table to search. Available tables: stocks, stock_prices, financial_metrics",
                            "enum": [
                                "stocks",
                                "stock_prices",
                                "financial_metrics"
                            ]
                        },
                        "columns": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "A list of columns corresponding to keywords in the user query. Available columns for each table:\n    - stocks: name [The full name of the stock], symbol [The stock symbol], sector [The sector of the stock]\n    - stock_prices: symbol [The symbol associated with the stock], date [The date of the stock price], price [The price of the stock], volume [The volume of the stock]\n    - financial_metrics: date [The date of the financial metrics], symbol [The stock symbol], market_cap [The market capitalization of the stock], pe_ratio [The price-to-earnings ratio of the stock], dividend_yield [The dividend yield of the stock], eps [The earnings per share of the stock], revenue [The revenue of the stock], net_income [The net income of the stock]"
                        }
                    },
                    "required": [
                        "table_name",
                        "columns"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "moving_average",
                "description": "Calculates the moving average for a specified column.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_handle": {
                            "type": "integer",
                            "description": "An integer representing a handle to the input data."
                        },
                        "column": {
                            "type": "string",
                            "description": "The column from the data handle to apply the computation to."
                        },
                        "window": {
                            "type": "integer",
                            "description": "The window size for the computation."
                        }
                    },
                    "required": [
                        "data_handle",
                        "column",
                        "window"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "percentage_change",
                "description": "Computes the percentage change between consecutive values in a column.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_handle": {
                            "type": "integer",
                            "description": "An integer representing a handle to the input data."
                        },
                        "column": {
                            "type": "string",
                            "description": "The column from the data handle to apply the computation to."
                        }
                    },
                    "required": [
                        "data_handle",
                        "column"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "rolling_volatility",
                "description": "Computes the rolling standard deviation for a specified column.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_handle": {
                            "type": "integer",
                            "description": "An integer representing a handle to the input data."
                        },
                        "column": {
                            "type": "string",
                            "description": "The column from the data handle to apply the computation to."
                        },
                        "window": {
                            "type": "integer",
                            "description": "The window size for the computation."
                        }
                    },
                    "required": [
                        "data_handle",
                        "column",
                        "window"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "cumulative_return",
                "description": "Calculates the cumulative return based on the values in a specified column.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_handle": {
                            "type": "integer",
                            "description": "An integer representing a handle to the input data."
                        },
                        "column": {
                            "type": "string",
                            "description": "The column from the data handle to apply the computation to."
                        }
                    },
                    "required": [
                        "data_handle",
                        "column"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "sort_data",
                "description": "Sorts the data by the value of a particular column.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_handle": {
                            "type": "integer",
                            "description": "An integer representing a handle to the input data."
                        },
                        "column": {
                            "type": "string",
                            "description": "The column from the data handle to apply the computation to."
                        },
                        "ascending": {
                            "type": "boolean",
                            "description": "Whether to sort in ascending order (True) or descending order (False)."
                        }
                    },
                    "required": [
                        "data_handle",
                        "column",
                        "ascending"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "truncate_data",
                "description": "Truncates the data to the specified number of rows, taking the top rows.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_handle": {
                            "type": "integer",
                            "description": "An integer representing a handle to the input data."
                        },
                        "num_rows": {
                            "type": "integer",
                            "description": "The number of rows to display."
                        }
                    },
                    "required": [
                        "data_handle",
                        "num_rows"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "display_chart",
                "description": "Creates various types of chart visualizations. This function generates different types of charts or plots using the specified data and parameters.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_handle": {
                            "type": "integer",
                            "description": "An integer representing a handle to the input data table."
                        },
                        "chart_type": {
                            "type": "string",
                            "enum": [
                                "line",
                                "bar",
                                "histogram",
                                "scatter",
                                "pie",
                                "box",
                                "heatmap"
                            ],
                            "description": "The type of chart to create."
                        },
                        "parameters": {
                            "type": "object",
                            "description": "A dictionary of required parameters for the chosen chart type.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "The title of the chart."
                                },
                                "x_column": {
                                    "type": "string",
                                    "description": "The column to use for the x-axis (required for line, bar, scatter, box, and heatmap charts)."
                                },
                                "y_column": {
                                    "type": "string",
                                    "description": "The column to use for the y-axis (required for line, bar, scatter, box, and heatmap charts)."
                                },
                                "column": {
                                    "type": "string",
                                    "description": "The column to use for histogram charts."
                                },
                                "bins": {
                                    "type": "integer",
                                    "description": "The number of bins for histogram charts (optional)."
                                },
                                "values_column": {
                                    "type": "string",
                                    "description": "The column containing values for pie and heatmap charts."
                                },
                                "labels_column": {
                                    "type": "string",
                                    "description": "The column containing labels for pie charts."
                                }
                            },
                            "required": [
                                "title"
                            ]
                        }
                    },
                    "required": [
                        "data_handle",
                        "chart_type",
                        "parameters"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "display_table",
                "description": "Displays data in a tabular format. This function generates a table view of the specified data.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_handle": {
                            "type": "integer",
                            "description": "An integer representing a handle to the input data table."
                        },
                        "parameters": {
                            "type": "object",
                            "description": "A dictionary of required and optional parameters for the table display.",
                            "properties": {
                                "caption": {
                                    "type": "string",
                                    "description": "The caption for the table."
                                },
                                "column_ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of column names to include in the table."
                                },
                                "limit": {
                                    "type": "integer",
                                    "description": "The maximum number of rows to display in the table."
                                },
                                "order_by": {
                                    "type": "string",
                                    "description": "The column to use for sorting the table."
                                },
                                "ascending": {
                                    "type": "boolean",
                                    "description": "Whether to sort in ascending order (True) or descending order (False)."
                                }
                            },
                            "required": [
                                "caption",
                                "column_ids"
                            ]
                        }
                    },
                    "required": [
                        "data_handle",
                        "parameters"
                    ]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "apply_filter",
                "description": "Applies a filtering operation on the specified column of the provided data handle and generates a new data handle. This function allows you to filter data based on various comparison operations.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_handle": {
                            "type": "integer",
                            "description": "The identifier of the data handle to operate on. This should be a valid handle obtained from a previous operation or data loading function."
                        },
                        "column": {
                            "type": "string",
                            "description": "The name of the column within the data handle to apply the filter on. The column name should exist in the data handle."
                        },
                        "value": {
                            "type": "string",
                            "description": "The value to filter by. This will be compared against the values in the specified column. For date filtering, use the format 'YYYY-MM-DD'."
                        },
                        "operand": {
                            "type": "string",
                            "enum": [
                                "less_than",
                                "greater_than",
                                "equals",
                                "not_equals",
                                "regex"
                            ],
                            "description": "The comparison operation to use for filtering. 'regex' will provide a wildcard value in value and use this to filter using wildcard expressions/regex."
                        }
                    },
                    "required": [
                        "data_handle",
                        "column",
                        "value",
                        "operand"
                    ]
                }
            }
        }
    ]
}
[project]
name = "earthcube_utilities"
version = "0.1.28"
#dynamic = ["dependencies"]
description = "A package of utilities for NSF Earthcube Geocodes Project"
readme =  "README.md"

authors = [
    {name = "Mike Bobak", email = "mbobak@illinois.edu"},
    {name= "David Valentine", email="dwvalentine@ucsd.edu"},
    {name = "Ya-Lan Yang", email = "ylyang@illinois.edu"}
]
maintainers = [
    {name = "Ya-Lan Yang", email = "ylyang@illinois.edu"},
    {name= "David Valentine", email="dwvalentine@ucsd.edu"}
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering",

    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]
dependencies=[
   "pandas==2.2.2",
"rdflib==7.0.0",
"requests==2.28.2",
"simplejson==3.18.3",
"sparqldataframe==0.1.0",
"numpy>=2.0.0",
"minio",
"pyld",
"rocrate",
"rocrateValidator",
"uuid",
"logconfig",
"jsonschema",
"pydash",
"advertools",
"pandarallel",
"pyoxigraph",
"oxrdflib"
]
#pip install -e '.[dev]'
[project.optional-dependencies]
dev=["approvaltests",
"kglab",
"reportlab",
"seaborn",
"jupyterlab"
]

[project.urls]  # Optional
"Homepage" = "https://www.earthcube.org/"
"Bug Tracker" = "https://github.com/earthcube/earthcube_utilities/issues"
"Geocodes Documentation" = "https://earthcube.github.io/geocodes_documentation/"
"Source" = "https://github.com/earthcube/earthcube_utilities"

# if the name of the module is the same as the name of the script, then you get
#    'module' object is not callable
[project.scripts]
generategraphstats = "ec.generate_graph_stats:start"
check_sitemap = "ec.check_sitemap:start"
query_graph = "ec.query_graph:start"
missing_report = "ec.missing_report:start"
summarize_identifier_metadata = "ec.summarize_identifier_metadata:start"
ec_reports = "ec.ec_reports:start"
bucketutil = "ec.bucketutil:start"

[tool.setuptools]
# If there are data files included in your packages that need to be
# installed, specify them here.
[tool.setuptools.packages.find]
where = ["src"]
[tool.setuptools.package-data]
"*" = ["*.txt", "*.sparql"]
#package-data = { "ec"=["graph/resources/sparql/*.sparql"]}
#[tool.setuptools.dynamic]
#dependencies = {file = ["requirements.txt"]}
[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
build-backend = "setuptools.build_meta"

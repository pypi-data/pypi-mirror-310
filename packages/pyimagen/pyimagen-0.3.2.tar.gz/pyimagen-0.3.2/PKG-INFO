Metadata-Version: 2.3
Name: pyimagen
Version: 0.3.2
Summary: A PyQt6-based AI image generation desktop application
Project-URL: Homepage, https://github.com/ricklamers/pyimagen
Project-URL: Repository, https://github.com/ricklamers/pyimagen.git
Project-URL: Issues, https://github.com/ricklamers/pyimagen/issues
Author-email: Rick Lamers <ricklamers@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Your Name
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
Keywords: ai,desktop,gui,image generation,pyqt
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Desktop Environment
Classifier: Topic :: Multimedia :: Graphics
Requires-Python: >=3.8
Requires-Dist: fal-client<0.6.0,>=0.5.0
Requires-Dist: groq>=0.3.0
Requires-Dist: nest-asyncio>=1.5.0
Requires-Dist: numpy>=1.24.0
Requires-Dist: pillow>=10.0.0
Requires-Dist: pyqt6>=6.0.0
Requires-Dist: requests>=2.31.0
Provides-Extra: dev
Requires-Dist: build>=1.2.2; extra == 'dev'
Requires-Dist: twine>=4.0.0; extra == 'dev'
Description-Content-Type: text/markdown

# PyImagen
PyImagen is a desktop GUI app for generating images using a variety of models via the Fal.ai API, with prompt generation by Groq's fast LLM inference.

# Inspiration
[@rikarends](https://x.com/rikarends) [Makepad](https://github.com/makepad/makepad) based version. 

[@ronaldmannak](https://x.com/ronaldmannak)'s [Flux AI Studio](https://apps.apple.com/nl/app/flux-ai-studio-for-media/id6725615977?l=en-GB&mt=12).

<img alt="UI" src="https://github.com/user-attachments/assets/3c6748f1-b0ad-4c49-8baa-ce9d6e7d4ee6">

## Features

- Generate images from text prompts utilizing multiple AI models
- Create random prompts using Groq's LLM
- Enhance prompts with additional creative details using Groq's LLM
- Maintain an image history with thumbnail previews
- Copy images directly to the clipboard
- Save images and their metadata locally for future reference

## Available Models

- FLUX 1 Schnell
- Recraft V3 
- AuraFlow
- FLUX 1.1 Pro Ultra
- FLUX 1.1 Pro
- Stable Cascade
- Fast Turbo Diffusion
- Fast LCM Diffusion
- And more...

## Requirements

- Python 3.10 or higher
- Groq API key
- Fal.ai API key

## API keys
Set `GROQ_API_KEY` and `FAL_KEY` in `.env` alternatively, enter them when the application starts.

## Settings
### Configuration

Customize PyImagen via `settings.json`. 

- **prompt-model**: Language model for prompt generation.
  - **Default**: `"llama-3.1-8b-instant"`

## Installation

### PYPI
```bash
pip install pyimagen
pyimagen
```

### From Source

1. Clone the repository and `cd` into it
2. Install the necessary dependencies:

```bash
# Optional
python -m venv .venv && source .venv/bin/activate 
pip install -e .
python app.py
```

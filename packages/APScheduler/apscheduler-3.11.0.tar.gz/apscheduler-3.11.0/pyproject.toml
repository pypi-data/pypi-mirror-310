[build-system]
requires = [
    "setuptools >= 64",
    "setuptools_scm >= 6.4"
]
build-backend = "setuptools.build_meta"

[project]
name = "APScheduler"
description = "In-process task scheduler with Cron-like capabilities"
readme = "README.rst"
authors = [{name = "Alex GrÃ¶nholm", email = "alex.gronholm@nextday.fi"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["scheduling", "cron"]
license = {text = "MIT"}
requires-python = ">= 3.8"
dependencies = [
    "tzlocal >= 3.0",
    "backports.zoneinfo; python_version < '3.9'"
]
dynamic = ["version"]

[project.urls]
Documentation = "https://apscheduler.readthedocs.io/en/3.x/"
Changelog = "https://apscheduler.readthedocs.io/en/3.x/versionhistory.html"
"Source code" = "https://github.com/agronholm/apscheduler"
"Issue tracker" = "https://github.com/agronholm/apscheduler/issues"

[project.optional-dependencies]
etcd = ["etcd3", "protobuf <= 3.21.0"]
gevent = ["gevent"]
mongodb = ["pymongo >= 3.0"]
redis = ["redis >= 3.0"]
rethinkdb = ["rethinkdb >= 2.4.0"]
sqlalchemy = ["sqlalchemy >= 1.4"]
tornado = ["tornado >= 4.3"]
twisted = ["twisted"]
zookeeper = ["kazoo"]
test = [
    "APScheduler[mongodb,redis,rethinkdb,sqlalchemy,tornado,zookeeper,etcd]",
    "pytest",
    "anyio >= 4.5.2",
    "PySide6; python_implementation == 'CPython' and python_version < '3.14'",
    "gevent; python_version < '3.14'",
    "pytz",
    "twisted; python_version < '3.14'",
]
doc = [
    "packaging",
    "sphinx",
    "sphinx-rtd-theme >= 1.3.0",
]

[project.entry-points."apscheduler.triggers"]
calendarinterval = "apscheduler.triggers.calendarinterval:CalendarIntervalTrigger"
date = "apscheduler.triggers.date:DateTrigger"
interval = "apscheduler.triggers.interval:IntervalTrigger"
cron = "apscheduler.triggers.cron:CronTrigger"
and = "apscheduler.triggers.combining:AndTrigger"
or = "apscheduler.triggers.combining:OrTrigger"

[project.entry-points."apscheduler.executors"]
debug = "apscheduler.executors.debug:DebugExecutor"
threadpool = "apscheduler.executors.pool:ThreadPoolExecutor"
processpool = "apscheduler.executors.pool:ProcessPoolExecutor"
asyncio = "apscheduler.executors.asyncio:AsyncIOExecutor"
gevent = "apscheduler.executors.gevent:GeventExecutor"
tornado = "apscheduler.executors.tornado:TornadoExecutor"
twisted = "apscheduler.executors.twisted:TwistedExecutor"

[project.entry-points."apscheduler.jobstores"]
memory = "apscheduler.jobstores.memory:MemoryJobStore"
sqlalchemy = "apscheduler.jobstores.sqlalchemy:SQLAlchemyJobStore"
mongodb = "apscheduler.jobstores.mongodb:MongoDBJobStore"
rethinkdb = "apscheduler.jobstores.rethinkdb:RethinkDBJobStore"
redis = "apscheduler.jobstores.redis:RedisJobStore"
zookeeper = "apscheduler.jobstores.zookeeper:ZooKeeperJobStore"
etcd = "apscheduler.jobstores.etcd:EtcdJobStore"

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.pytest.ini_options]
addopts = "-rsx --tb=short"
testpaths = "tests"
filterwarnings = "always"
markers = [
    "external_service: marks tests as requiring some external service",
]

[tool.coverage.run]
source = ["apscheduler"]

[tool.coverage.report]
show_missing = true

[tool.ruff.lint]
extend-select = [
    "G",            # flake8-logging-format
    "I",            # isort
    "ISC",          # flake8-implicit-str-concat
    "PGH",          # pygrep-hooks
    "RUF",          # ruff specific rules
    "UP",           # pyupgrade
    "W",            # pycodestyle warnings
]
ignore = [
    "RUF001",
    "RUF002",
    "RUF005",
    "RUF012",
]

[tool.ruff.lint.extend-per-file-ignores]
"src/apscheduler/jobstores/rethinkdb.py" = ["E711"]

[tool.ruff.lint.isort]
known-first-party = ["apscheduler"]

[tool.tox]
env_list = ["py38", "py39", "py310", "py311", "py312", "py313", "py314", "pypy3"]
skip_missing_interpreters = true

[tool.tox.env_run_base]
commands = [["pytest", { replace = "posargs", extend = true }]]
package = "editable"
extras = ["test"]

[tool.tox.env.docs]
commands = [["sphinx-build", "docs", "build/sphinx"]]
extras = ["doc"]

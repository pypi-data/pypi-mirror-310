[tool.poetry]
name = "asyncly"
version = "0.3.3"
description = "Simple HTTP client and server for your integrations based on aiohttp"
authors = ["Sergey Natalenko <sergey.natalenko@mail.ru>"]
license = "MIT"
homepage = "https://github.com/andy-takker/asyncly"
readme = "README.rst"
keywords = ["aiohttp", "http", "client"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Framework :: Pytest",
    "Framework :: aiohttp",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
]
packages = [
    { include = "asyncly" },
]

[tool.poetry.urls]
"Source" = "https://github.com/andy-takker/asyncly"
"Bug Tracker" = "https://github.com/andy-takker/asyncly/issues"

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.9.5"
msgspec = {version = "^0.18.6", optional = true}
orjson = {version = "^3.10.6", optional = true}
pydantic = {version = "^2.8.2", optional = true}

[tool.poetry.extras]
msgspec = ["msgspec"]
pydantic = ["pydantic"]
orjson = ["orjson"]

[tool.poetry.group.dev.dependencies]
pre-commit = ">=3.7.1,<5.0.0"
mypy = "^1.10.1"
ruff = ">=0.5.2,<0.9.0"
restructuredtext-lint = "^1.4.0"
pygments = "^2.18.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
python_files = "test_*"
python_functions = "test_*"
python_classes = "TestSuite*"
addopts = "-p no:cacheprovider"

[tool.coverage.run]
branch = true
source = ["asyncly"]
command_line = "-m pytest"

[tool.coverage.report]
show_missing = true

[tool.coverage.xml]
output = "coverage.xml"

[tool.ruff]
line-length = 88
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
]
indent-width = 4
target-version = "py310"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
select = [
    "BLE",
    "C90",
    "E",
    "F",
    "G",
    "I",
    "ICN",
    "ISC",
    "PLE",
    "Q",
    "RUF006",
    "RUF100",
    "T10",
    "T20",
    "TID",
    "UP",
    "W",
]
ignore = ["ISC001"]
fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["asyncly", "tests"]

[tool.mypy]
plugins = ["pydantic.mypy"]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = false
no_implicit_optional = true

[[tool.mypy.overrides]]
module = [
    "msgspec.*",
    "orjson.*",
]
ignore_missing_imports = true
[project]
name = "wagtail-localize-git"
description = "Wagtail Localize integration for Git-based translation services"
authors = [{name = "Karl Hobley", email = "karl@torchbox.com"}]
maintainers = [{name = "Dan Braghis", email="dan.braghis@torchbox.com"}]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["Wagtail", "Django", "content", "review"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Wagtail",
    "Framework :: Wagtail :: 5",
    "Framework :: Wagtail :: 6",
]

dynamic = ["version"]
requires-python = ">=3.9"
dependencies = [
    "Django>=4.2,<5.2",
    "Wagtail>=5.2",
    "wagtail-localize>=1.0",
    "pygit2>=1.0,<2.0",
    "gitpython>=3.0,<4.0",
    "toml>=0.10,<0.11",
]

[project.optional-dependencies]
testing = [
    "dj-database-url>=2.1.0,<3.0",
    "freezegun>=1.4.0,<2.0",
    "coverage>=7.0,<8.0",
]

[project.urls]
Source = "https://github.com/wagtail/wagtail-localize-git"
Changelog = "https://github.com/wagtail/wagtail-localize-git/blob/main/CHANGELOG.md"


[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "wagtail_localize_git"

[tool.flit.sdist]
exclude = [
    ".*",
    "*.db",
    "*.json",
    "*.ini",
    "*.yaml",
    "tests",
    "CHANGELOG.md",
    "testmanage.py",
]

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "DJ", # flake8-django
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "PGH", # pygrep-hooks
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
    "W",   # pycodestyle warnings
    "YTT",   # flake8-2020
    "UP",  # pyupgrade
    "RUF100",  # unused noqa
]

ignore = ["E501"]
fixable = ["C4", "E", "F", "I", "UP"]

[tool.ruff.lint.isort]
known-first-party = ["src", "wagtail_localize_git"]
lines-between-types = 1
lines-after-imports = 2

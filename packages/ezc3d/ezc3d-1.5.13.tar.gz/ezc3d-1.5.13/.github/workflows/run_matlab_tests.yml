name: Run the Matlab tests

on: [pull_request]

env:
  BUILD_FOLDER: build

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/ezc3d
          # - os: macos-latest
          #   label: osx-arm64
          #   prefix: /Users/runner/miniconda3/envs/ezc3d
          - os: macos-13
            label: osx-intel
            prefix: /Users/runner/miniconda3/envs/ezc3d
          - os: windows-latest
            label: win-64
            prefix: C:\Miniconda3\envs\ezc3d
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
        
      - name: Print mamba info
        run: | 
          mamba info
          mamba list
          
      - name: Install dependencies
        run: | 
          mamba install cmake git pkgconfig -cconda-forge
          mamba list
          git submodule update --init --recursive

      - name: Install MATLAB on WINDOWS and LINUX
        uses: matlab-actions/setup-matlab@v2
        with: 
          cache: true
        if: matrix.label != 'osx-arm64'

      - name: Install MATLAB on MACOS-Arm64
        uses: matlab-actions/setup-matlab@v2
        with:
          # The version of MATLAB of R2024a does not contain MX_LIBRARY
          release: R2023a
          cache: true
        if: matrix.label == 'osx-arm64'

      - name: Build ezc3d on UNIX
        run: |
          MAIN_FOLDER=`pwd`
          cd
          HOME=`pwd`
          cd $MAIN_FOLDER
          CONDA_ENV_PATH=$CONDA/envs/ezc3d
          mkdir -p $MAIN_FOLDER/$BUILD_FOLDER
          cd $MAIN_FOLDER/$BUILD_FOLDER
          cmake -DCMAKE_INSTALL_PREFIX=$CONDA_ENV_PATH -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=OFF -DBUILD_DOC=OFF -DBUILD_EXAMPLE=OFF -DUSE_MATRIX_FAST_ACCESSOR=OFF -DBINDER_MATLAB=ON -DMatlab_ezc3d_INSTALL_DIR=$HOME -DBINDER_PYTHON3=OFF ..
          make install -j${{ steps.cpu-cores.outputs.count }}
          cd $MAIN_FOLDER
        if: matrix.label != 'win-64'

      - name: Build ezc3d on WINDOWS
        run: |
          MAIN_FOLDER=`pwd`
          CONDA_ENV_PATH=$CONDA/envs/ezc3d
          mkdir -p $BUILD_FOLDER
          cd $BUILD_FOLDER
          cmake -G"Visual Studio 17 2022" -Ax64 -DCMAKE_INSTALL_PREFIX=$CONDA_ENV_PATH -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=OFF -DBUILD_DOC=OFF -DBUILD_EXAMPLE=OFF -DUSE_MATRIX_FAST_ACCESSOR=OFF -DBINDER_MATLAB=ON -DMatlab_ezc3d_INSTALL_DIR=$HOME -DBINDER_PYTHON3=OFF ..
          cmake --build . --config Release --target install -j${{ steps.cpu-cores.outputs.count }}
          cd $MAIN_FOLDER
        if: matrix.label == 'win-64'

      - name: Run the MATLAB binder tests
        run: |
          MAIN_FOLDER=`pwd`
          cd
          HOME=`pwd`
          cd $MAIN_FOLDER/test/matlab
          cp $HOME/ezc3d_matlab/* .
          # We cannot run the tests as we do not have a license. They are however run on octave
          # matlab -batch test_binder_matlab.m
          # matlab -batch test_binder_matlab_force_platform.m
          cd $MAIN_FOLDER

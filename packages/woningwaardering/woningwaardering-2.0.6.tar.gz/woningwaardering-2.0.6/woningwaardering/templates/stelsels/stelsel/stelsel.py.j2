import warnings
from datetime import date

from loguru import logger

from woningwaardering.stelsels import utils
from woningwaardering.stelsels.stelsel import Stelsel
from woningwaardering.stelsels.{{ stelsel.name }} import (
    {%- for stelselgroep, className in stelselgroepen %}
    {{ className }},
    {%- endfor %}
)
from woningwaardering.vera.bvg.generated import (
    EenhedenEenheid,
)
from woningwaardering.vera.referentiedata import (
    Woningwaarderingstelsel,
)


class {{ className }}(Stelsel):
    def __init__(self, peildatum: date = date.today()) -> None:
        super().__init__(
            stelsel={{ stelsel }},
            begindatum=date.fromisoformat("{{ begindatum }}"),
            einddatum=date.max,
            peildatum=peildatum,
            stelselgroepen=[
                {%- for stelselgroep, className in stelselgroepen %}
                {{ className }},
                {%- endfor %}
            ],
        )


if __name__ == "__main__":  # pragma: no cover
    logger.enable("woningwaardering")
    warnings.simplefilter("default", UserWarning)

    {{ stelsel.name }} = {{ className }}(
        peildatum=date.fromisoformat("{{ begindatum }}")
    )

    with open(
        "tests/data/generiek/input/37101000032.json",
        "r+",
    ) as file:
        eenheid = EenhedenEenheid.model_validate_json(file.read())
        woningwaardering_resultaat = {{ stelsel.name }}.bereken(eenheid)
        print(
            woningwaardering_resultaat.model_dump_json(
                by_alias=True, indent=2, exclude_none=True
            )
        )
        tabel = utils.naar_tabel(woningwaardering_resultaat)

        print(tabel)

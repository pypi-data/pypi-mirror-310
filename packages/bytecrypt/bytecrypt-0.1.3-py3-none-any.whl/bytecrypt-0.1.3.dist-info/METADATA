Metadata-Version: 2.1
Name: bytecrypt
Version: 0.1.3
Summary: Easily encrypt/decrypt bytes with password
License: MIT License
        
        Copyright (c) 2024 sm
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Keywords: encrypt,decrypt,bytecrypt,encryption,decryption
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: cryptography

### About
Bytecrypt is a python package for easy data encryption / decryption with password.

### Installation
```sh

pip install bytecrypt

```

### Usage

#### Example 1

```py

# main.py

from bytecrypt import *

# byte array
encrypted_data = encrypt_bytes(b"secret", b"password")
decrypted_data = decrypt_bytes(encrypted_data, b"password")

print("\nEncrypted data: " + str(encrypted_data.decode("utf-8")))
print("\nDecrypted data: " + str(decrypted_data.decode("utf-8")))

```

```sh
# output

$ python main.py

Encrypted data: gAAAAABnO7wzHm-WLv-s_fQgHRe_-0Al_CmzUU7XfZcRaRSBXbLy1j8Z97KhiY8nZbaHETyKSO_NuGQH1f73MMs58nrT7pxWJg==

Decrypted data: secret


```

#### Example 2 - encrypting / decrypting file contents


```py
# files
encrypt_file("path/to/file/test.docx", b"testPassword")
decrypt_file("path/to/file/test.docx", b"testPassword")

# files in directory
encrypt_directory("path/to/directory", b"testPassword")
decrypt_directory("path/to/directory", b"testPassword")


```

#### Example 3 - command line usage


```sh

# encrypt/decrypt files
python -m bytecrypt -e -f "test_file.txt" -p "test123"

# encrypt/decrypt string
python -m bytecrypt -e -str "test_string-1234" -p "test123"
python -m bytecrypt -d -str "tYWHbf_...2dHSL=" -p "test123"

# encrypt/decrypt files in directory
python -m bytecrypt -e -dir "test/directory1" -p "test123"
python -m bytecrypt -d -dir "test/directory1" -p "test123"
python -m bytecrypt -e -dir . -p "test123"

```

#### Command line arguments:


```sh

-e    ;    --encrypt
-d    ;    --decrypt
-f    ;    --file
-dir  ;    --directory
-str  ;    --string
-p    ;    --password

```

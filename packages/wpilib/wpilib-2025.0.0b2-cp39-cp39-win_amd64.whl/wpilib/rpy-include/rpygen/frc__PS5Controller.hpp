// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>

#include <frc\PS5Controller.h>

#include <wpi/sendable/SendableBuilder.h>

#include <rpygen/frc__GenericHID.hpp>
#include <rpygen/wpi__Sendable.hpp>

namespace rpygen {

using namespace frc;

template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_frc__PS5Controller :
  PyTrampolineCfg_frc__GenericHID<
  PyTrampolineCfg_wpi__Sendable<
  CfgBase
  >
  >
{
  using Base = frc::PS5Controller;
  using override_base_InitSendable_RTSendableBuilder = frc::PS5Controller;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_frc__PS5Controller =
  PyTrampoline_frc__GenericHID<
    PyTrampoline_wpi__Sendable<
      PyTrampolineBase
      , PyTrampolineCfg>
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_frc__PS5Controller : PyTrampolineBase_frc__PS5Controller<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_frc__PS5Controller<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_frc__PS5Controller;
  using Button [[maybe_unused]] = typename frc::PS5Controller::Button;
  using Axis [[maybe_unused]] = typename frc::PS5Controller::Axis;

  #ifndef RPYGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(wpi::SendableBuilder& builder) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_InitSendable_RTSendableBuilder;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "initSendable", builder);
      return CxxCallBase::InitSendable(std::forward<decltype(builder)>(builder));
    }
  #endif
};

}; // namespace rpygen

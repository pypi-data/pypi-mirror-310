import MF
import MF.V3
import MF.V3.Settings
import MF.V3.Settings.Advanced
import MF.V3.Settings.Align
import MF.V3.Settings.AutoFocus
import MF.V3.Settings.BoundingBox
import MF.V3.Settings.Camera
import MF.V3.Settings.Capture
import MF.V3.Settings.Export
import MF.V3.Settings.Group
import MF.V3.Settings.I18n
import MF.V3.Settings.Merge
import MF.V3.Settings.NewGroup
import MF.V3.Settings.Project
import MF.V3.Settings.Projector
import MF.V3.Settings.Scan
import MF.V3.Settings.ScanData
import MF.V3.Settings.ScanSelection
import MF.V3.Settings.Scanner
import MF.V3.Settings.Software
import MF.V3.Settings.Style
import MF.V3.Settings.Turntable
import MF.V3.Settings.Tutorials
import MF.V3.Settings.Viewer
import MF.V3.Settings.Wifi
import MF.V3.Tasks
import MF.V3.Tasks.AddMergeToProject
import MF.V3.Tasks.Align
import MF.V3.Tasks.AutoFocus
import MF.V3.Tasks.BoundingBox
import MF.V3.Tasks.CalibrateCameras
import MF.V3.Tasks.CalibrateTurntable
import MF.V3.Tasks.CalibrationCaptureTargets
import MF.V3.Tasks.CameraCalibration
import MF.V3.Tasks.CloseProject
import MF.V3.Tasks.ConnectWifi
import MF.V3.Tasks.DepthMap
import MF.V3.Tasks.DetectCalibrationCard
import MF.V3.Tasks.DownloadProject
import MF.V3.Tasks.Export
import MF.V3.Tasks.ExportLogs
import MF.V3.Tasks.ExportMerge
import MF.V3.Tasks.FlattenGroup
import MF.V3.Tasks.ForgetWifi
import MF.V3.Tasks.HasCameras
import MF.V3.Tasks.HasProjector
import MF.V3.Tasks.HasTurntable
import MF.V3.Tasks.ListExportFormats
import MF.V3.Tasks.ListGroups
import MF.V3.Tasks.ListNetworkInterfaces
import MF.V3.Tasks.ListProjects
import MF.V3.Tasks.ListScans
import MF.V3.Tasks.ListSettings
import MF.V3.Tasks.ListWifi
import MF.V3.Tasks.Merge
import MF.V3.Tasks.MergeData
import MF.V3.Tasks.MoveGroup
import MF.V3.Tasks.NewGroup
import MF.V3.Tasks.NewProject
import MF.V3.Tasks.NewScan
import MF.V3.Tasks.OpenProject
import MF.V3.Tasks.PopSettings
import MF.V3.Tasks.PushSettings
import MF.V3.Tasks.Reboot
import MF.V3.Tasks.RemoveGroups
import MF.V3.Tasks.RemoveProjects
import MF.V3.Tasks.RestoreFactoryCalibration
import MF.V3.Tasks.RotateTurntable
import MF.V3.Tasks.ScanData
import MF.V3.Tasks.SetCameras
import MF.V3.Tasks.SetGroup
import MF.V3.Tasks.SetProject
import MF.V3.Tasks.SetProjector
import MF.V3.Tasks.Shutdown
import MF.V3.Tasks.SplitGroup
import MF.V3.Tasks.StartVideo
import MF.V3.Tasks.StopVideo
import MF.V3.Tasks.SystemInfo
import MF.V3.Tasks.TransformGroup
import MF.V3.Tasks.TurntableCalibration
import MF.V3.Tasks.UpdateSettings
import MF.V3.Tasks.UploadProject
import importlib
import inspect
import json
import threading
import three
import three.MF
import three.MF.V3
import three.MF.V3.Buffer
import three.MF.V3.Three
import three.serialization
import time
import types
import typing
import websocket
from typing import Optional, Callable, Any, Union, List


class Scanner:
    def __init__(self, OnTask: Optional[Callable[[MF.V3.Task.Task], None]] = None, OnMessage: Optional[Callable[[str], None]] = None, OnBuffer: Optional[Callable[[Any, bytes], None]] = None): ...
    def Connect(self, URI: str, timeoutSec=5) -> bool: ...
    def Disconnect(self) -> None: ...
    def IsConnected(self) -> bool: ...
    def SendTask(self, task, buffer: bytes = None) -> Any: ...
    def add_merge_to_project(self) -> MF.V3.Task.Task: ...
    def align(self, source: int, target: int, rough: MF.V3.Settings.Align.Align.Rough = None, fine: MF.V3.Settings.Align.Align.Fine = None) -> MF.V3.Task.Task: ...
    def auto_focus(self, applyAll: bool, cameras: List[MF.V3.Settings.AutoFocus.AutoFocus.Camera] = None) -> MF.V3.Task.Task: ...
    def bounding_box(self, selection: MF.V3.Settings.ScanSelection.ScanSelection, axisAligned: bool) -> MF.V3.Task.Task: ...
    def calibrate_cameras(self) -> MF.V3.Task.Task: ...
    def calibrate_turntable(self) -> MF.V3.Task.Task: ...
    def calibration_capture_targets(self) -> MF.V3.Task.Task: ...
    def camera_calibration(self) -> MF.V3.Task.Task: ...
    def close_project(self) -> MF.V3.Task.Task: ...
    def connect_wifi(self, ssid: str, password: str) -> MF.V3.Task.Task: ...
    def depth_map(self, camera: MF.V3.Settings.Camera.Camera = None, projector: MF.V3.Settings.Projector.Projector = None, turntable: MF.V3.Settings.Turntable.Turntable = None, capture: MF.V3.Settings.Capture.Capture = None, processing: MF.V3.Settings.Scan.Scan.Processing = None) -> MF.V3.Task.Task: ...
    def detect_calibration_card(self, Input: int) -> MF.V3.Task.Task: ...
    def download_project(self, Input: int) -> MF.V3.Task.Task: ...
    def export(self, selection: MF.V3.Settings.ScanSelection.ScanSelection = None, texture: bool = None, merge: bool = None, format: MF.V3.Settings.Export.Export.Format = None, scale: float = None) -> MF.V3.Task.Task: ...
    def export_logs(self, Input: bool = None) -> MF.V3.Task.Task: ...
    def export_merge(self, selection: MF.V3.Settings.ScanSelection.ScanSelection = None, texture: bool = None, merge: bool = None, format: MF.V3.Settings.Export.Export.Format = None, scale: float = None) -> MF.V3.Task.Task: ...
    def flatten_group(self, Input: int) -> MF.V3.Task.Task: ...
    def forget_wifi(self) -> MF.V3.Task.Task: ...
    def has_cameras(self) -> MF.V3.Task.Task: ...
    def has_projector(self) -> MF.V3.Task.Task: ...
    def has_turntable(self) -> MF.V3.Task.Task: ...
    def list_export_formats(self) -> MF.V3.Task.Task: ...
    def list_groups(self) -> MF.V3.Task.Task: ...
    def list_network_interfaces(self) -> MF.V3.Task.Task: ...
    def list_projects(self) -> MF.V3.Task.Task: ...
    def list_scans(self) -> MF.V3.Task.Task: ...
    def list_settings(self) -> MF.V3.Task.Task: ...
    def list_wifi(self) -> MF.V3.Task.Task: ...
    def merge(self, selection: MF.V3.Settings.ScanSelection.ScanSelection = None, remesh: MF.V3.Settings.Merge.Merge.Remesh = None, simplify: MF.V3.Settings.Merge.Merge.Simplify = None, texturize: bool = None) -> MF.V3.Task.Task: ...
    def merge_data(self, index: int, mergeStep: MF.V3.Settings.ScanData.ScanData.MergeStep = None, buffers: List[MF.V3.Settings.ScanData.ScanData.Buffer] = None, metadata: List[MF.V3.Settings.ScanData.ScanData.Metadata] = None) -> MF.V3.Task.Task: ...
    def move_group(self, Input: List[int] = None) -> MF.V3.Task.Task: ...
    def new_group(self, parentIndex: int = None, baseName: str = None, color: List[float] = None, visible: bool = None, collapsed: bool = None, rotation: List[float] = None, translation: List[float] = None) -> MF.V3.Task.Task: ...
    def new_project(self, Input: str = None) -> MF.V3.Task.Task: ...
    def new_scan(self, camera: MF.V3.Settings.Camera.Camera = None, projector: MF.V3.Settings.Projector.Projector = None, turntable: MF.V3.Settings.Turntable.Turntable = None, capture: MF.V3.Settings.Capture.Capture = None, processing: MF.V3.Settings.Scan.Scan.Processing = None) -> MF.V3.Task.Task: ...
    def open_project(self, Input: int) -> MF.V3.Task.Task: ...
    def pop_settings(self, Input: bool = None) -> MF.V3.Task.Task: ...
    def push_settings(self) -> MF.V3.Task.Task: ...
    def reboot(self) -> MF.V3.Task.Task: ...
    def remove_groups(self, Input: List[int] = None) -> MF.V3.Task.Task: ...
    def remove_projects(self, Input: List[int] = None) -> MF.V3.Task.Task: ...
    def restore_factory_calibration(self) -> MF.V3.Task.Task: ...
    def rotate_turntable(self, Input: int) -> MF.V3.Task.Task: ...
    def scan_data(self, index: int, mergeStep: MF.V3.Settings.ScanData.ScanData.MergeStep = None, buffers: List[MF.V3.Settings.ScanData.ScanData.Buffer] = None, metadata: List[MF.V3.Settings.ScanData.ScanData.Metadata] = None) -> MF.V3.Task.Task: ...
    def set_cameras(self, selection: List[int] = None, autoExposure: bool = None, exposure: int = None, analogGain: float = None, digitalGain: int = None, focus: int = None) -> MF.V3.Task.Task: ...
    def set_group(self, index: int, name: str = None, color: List[float] = None, visible: bool = None, collapsed: bool = None, rotation: List[float] = None, translation: List[float] = None) -> MF.V3.Task.Task: ...
    def set_project(self, index: int = None, name: str = None) -> MF.V3.Task.Task: ...
    def set_projector(self, on: bool = None, brightness: float = None, pattern: MF.V3.Settings.Projector.Projector.Pattern = None, image: MF.V3.Settings.Projector.Projector.Image = None, color: List[float] = None, buffer: bytes = None) -> MF.V3.Task.Task: ...
    def shutdown(self) -> MF.V3.Task.Task: ...
    def split_group(self, Input: int) -> MF.V3.Task.Task: ...
    def start_video(self) -> MF.V3.Task.Task: ...
    def stop_video(self) -> MF.V3.Task.Task: ...
    def system_info(self, updateMajor: bool = None, updateNightly: bool = None) -> MF.V3.Task.Task: ...
    def transform_group(self, index: int, name: str = None, color: List[float] = None, visible: bool = None, collapsed: bool = None, rotation: List[float] = None, translation: List[float] = None) -> MF.V3.Task.Task: ...
    def turntable_calibration(self) -> MF.V3.Task.Task: ...
    def update_settings(self, advanced: MF.V3.Settings.Advanced.Advanced = None, camera: MF.V3.Settings.Camera.Camera = None, capture: MF.V3.Settings.Capture.Capture = None, i18n: MF.V3.Settings.I18n.I18n = None, projector: MF.V3.Settings.Projector.Projector = None, style: MF.V3.Settings.Style.Style = None, turntable: MF.V3.Settings.Turntable.Turntable = None, tutorials: MF.V3.Settings.Tutorials.Tutorials = None, viewer: MF.V3.Settings.Viewer.Viewer = None, software: MF.V3.Settings.Software.Software = None) -> MF.V3.Task.Task: ...
    def upload_project(self, buffer: bytes) -> MF.V3.Task.Task: ...
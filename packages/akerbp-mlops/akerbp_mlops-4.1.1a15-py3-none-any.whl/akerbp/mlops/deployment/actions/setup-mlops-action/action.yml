name: "setup-mlops-env"
description: "Setup the necessary environment variables for MLOps"
inputs:
  model_env:
    description: "The environment to deploy the model to"
    required: true
  service_name:
    description: "The name of the service to deploy"
    required: true
  install_poetry:
    description: "Whether to install poetry or not"
    required: false
    default: "true"
  python_version:
    description: "The python version to use"
    required: false
    default: "3.11"
runs:
  using: "composite"

  steps:
    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}

    - name: Load cached Poetry installation
      id: cached-poetry
      if: ${{ inputs.install_poetry == 'true' }}
      uses: actions/cache@v4
      with:
        path: ~/.local # the path depends on the OS
        key: poetry-0 # increment to reset cache

    - name: Install and configure Poetry
      id: install-poetry
      if: ${{ (steps.cached-poetry.outputs.cache-hit != 'true') && (inputs.install_poetry == 'true')}}
      uses: snok/install-poetry@v1
      with:
        version: "latest"
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Install dynamic versioning plugin
      if: ${{ inputs.install_poetry == 'true' }}
      run: |
        poetry self add "poetry-dynamic-versioning[plugin]"
      shell: bash

    - name: "Set environment variables"
      shell: "bash"
      run: |
        echo "MODEL_ENV=${{ inputs.model_env }}" >> $GITHUB_ENV
        echo "SERVICE_NAME=${{ inputs.service_name }}" >> $GITHUB_ENV

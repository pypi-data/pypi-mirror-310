// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>

#include <rev/config/SparkFlexConfig.h>

#include <sparkbaseconfig_apply.h>

#include <rpygen/rev__spark__SparkBaseConfig.hpp>

namespace rpygen {

using namespace rev::spark;

template <typename CfgBase = EmptyTrampolineCfg>
struct PyTrampolineCfg_rev__spark__SparkFlexConfig :
  PyTrampolineCfg_rev__spark__SparkBaseConfig<
  CfgBase
  >
{
  using Base = rev::spark::SparkFlexConfig;
  using override_base_Flatten_v = rev::spark::SparkFlexConfig;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_rev__spark__SparkFlexConfig =
  PyTrampoline_rev__spark__SparkBaseConfig<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_rev__spark__SparkFlexConfig : PyTrampolineBase_rev__spark__SparkFlexConfig<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_rev__spark__SparkFlexConfig<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_rev__spark__SparkFlexConfig;

  #ifndef RPYGEN_DISABLE_Flatten_v
    std::string Flatten() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_Flatten_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(std::string), LookupBase,
        "flatten", );
      return CxxCallBase::Flatten();
    }
  #endif
};

}; // namespace rpygen

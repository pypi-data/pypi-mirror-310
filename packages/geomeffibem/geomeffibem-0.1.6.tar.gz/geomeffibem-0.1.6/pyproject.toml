[tool]
[tool.poetry]
name = "geomeffibem"
version = "0.1.6"
homepage = "https://github.com/jmarrec/geomeffibem"
description = "A small library to facilitate some building energy modeling geometry operations with OpenStudio and EnergyPlus in mind."
authors = ["Julien Marrec <contact@effibem.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "geomeffibem" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"

openstudio = { version= "^3.4", allow-prereleases = true}
matplotlib = [
    {version = "^3.5.2", markers = "python_version < '3.10'"},
    {version = "^3.9.2", markers = "python_version > '3.10'"}
]
pandas = [
    {version = "^1.4.2", markers = "python_version < '3.10'"},
    {version = "^2.2.3", markers = "python_version > '3.10'"}
]
numpy = [
    {version = "^1.22.4", markers = "python_version < '3.10'"},
    {version = "^2.1.3", markers = "python_version > '3.10'"}
]

black  = {version = "^24.10.0", optional = true}
isort  = {version = "^5.13.2", optional = true}
flake8  = {version = "^7.1.1", optional = true}
flake8-docstrings = {version = "^1.7.0", optional = true}
mypy = {version = "^1.13.0", optional = true}
pytest  = {version = "^8.3.3", optional = true}
pytest-cov  = {version = "^6.0.0", optional = true}
tox  = {version = "^4.23.2", optional = true}
virtualenv  = {version = "^20.27.1", optional = true}
mkdocs  = {version = "^1.6.1", optional = true}
mkdocs-include-markdown-plugin  = {version = "^7.1.1", optional = true}
mkdocs-material  = {version = "^9.5.46", optional = true}
mkdocstrings  = {version = "^0.27.0", optional = true}
mkdocstrings-python = {version = "^1.12.2", optional = true}
mkdocs-material-extensions  = {version = "^1.3.1", optional = true}
twine  = {version = "^5.1.1", optional = true}
mkdocs-autorefs = {version = "^1.2.0", optional = true}
pre-commit = {version = "^4.0.1", optional = true}
toml = {version = "^0.10.2", optional = true}
bump2version = {version = "^1.0.1", optional = true}

[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
priority = "supplemental"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocstrings-python",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    ]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py37', 'py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

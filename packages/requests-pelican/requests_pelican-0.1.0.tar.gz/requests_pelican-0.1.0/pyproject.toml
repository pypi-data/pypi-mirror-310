[build-system]
requires = [
  "setuptools >= 61",
  "setuptools_scm[toml] >= 3.4.3",
  "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "requests-pelican"
description = "A requests addon for Pelican data federations"
readme = "README.md"
authors = [
  { name = "Duncan Macleod", email = "duncan.macleod@ligo.org" },
]
license = { text = "MIT" }
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Astronomy",
  "Topic :: Scientific/Engineering :: Physics",
]

# requirements
requires-python = ">=3.9"
dependencies = [
  "cachetools",
  "requests",
  "requests-cache",
  "scitokens",
]

# dynamic properties set by tools
dynamic = [
  "version",
]

[project.optional-dependencies]
docs = [
  "furo",
  "Sphinx",
  "sphinx-automodapi",
]
scitokens = [
  "scitokens",
  "requests-scitokens",
]
test = [
  "pytest >= 3.9.1",
  "pytest-cov",
  "pytest-remotedata",
  "requests-mock",
]

[project.urls]
"Homepage" = "https://git.ligo.org/computing/software/requests-pelican"
"Bug Tracker" = "https://git.ligo.org/computing/software/requests-pelican/-/issues"
"Documentation" = "https://requests-pelican.readthedocs.io/en/stable"
"Source Code" = "https://git.ligo.org/computing/software/requests-pelican"

# -- pytest

[tool.coverage.paths]
source = [
  "requests_pelican/",
  "*/requests_pelican/",
]

[tool.coverage.run]
source = [ "requests_pelican" ]

[tool.coverage.report]
omit = [
  "requests_pelican/_version.py",
]
precision = 1

# -- mypy

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true

# -- pytest

[tool.pytest.ini_options]
addopts = "-r a"
filterwarnings = [
  "error",
]
minversion = "3.9.1"

# -- ruff

[tool.ruff.lint]
preview = true
select = [
  # mccabe
  "C90",
  # pycodestyle errors
  "E",
  # flake8-executable
  "EXE",
  # pyflakes
  "F",
  # isort
  "I",
  # pep8-naming
  "N",
  # pyupgrade
  "UP",
  # pycodestyle warnings
  "W",
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401",  # unused import
  "F403",  # from ... import *
]

# -- setuptools

[tool.setuptools]
license-files = [ "LICENSE" ]

[tool.setuptools.package-data]
"*" = [
  "py.typed",
]

# -- setuptools-scm

[tool.setuptools_scm]
write_to = "requests_pelican/_version.py"


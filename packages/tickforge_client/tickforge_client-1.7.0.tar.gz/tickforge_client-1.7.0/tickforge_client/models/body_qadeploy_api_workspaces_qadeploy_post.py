# coding: utf-8

"""
    Tickforge API

    An API to interact with Uptick Internal Resources

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, Dict, List, Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr, conlist

class BodyQadeployApiWorkspacesQadeployPost(BaseModel):
    """
    BodyQadeployApiWorkspacesQadeployPost
    """
    app_name: StrictStr = Field(...)
    image_prefix: StrictStr = Field(...)
    clone_qa_db_data: StrictBool = Field(...)
    author_email: StrictStr = Field(...)
    author_name: StrictStr = Field(...)
    extra_deployment: Optional[Dict[str, Any]] = None
    extra_tags: Optional[conlist(StrictStr)] = None
    __properties = ["app_name", "image_prefix", "clone_qa_db_data", "author_email", "author_name", "extra_deployment", "extra_tags"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> BodyQadeployApiWorkspacesQadeployPost:
        """Create an instance of BodyQadeployApiWorkspacesQadeployPost from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> BodyQadeployApiWorkspacesQadeployPost:
        """Create an instance of BodyQadeployApiWorkspacesQadeployPost from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return BodyQadeployApiWorkspacesQadeployPost.parse_obj(obj)

        _obj = BodyQadeployApiWorkspacesQadeployPost.parse_obj({
            "app_name": obj.get("app_name"),
            "image_prefix": obj.get("image_prefix"),
            "clone_qa_db_data": obj.get("clone_qa_db_data"),
            "author_email": obj.get("author_email"),
            "author_name": obj.get("author_name"),
            "extra_deployment": obj.get("extra_deployment"),
            "extra_tags": obj.get("extra_tags")
        })
        return _obj



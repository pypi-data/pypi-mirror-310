# coding: utf-8

"""
    Antimatter Public API

    Interact with the Antimatter Cloud API

    The version of the OpenAPI document: 2.0.13
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from antimatter_api.models.capsule_seal_request import CapsuleSealRequest

class TestCapsuleSealRequest(unittest.TestCase):
    """CapsuleSealRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CapsuleSealRequest:
        """Test CapsuleSealRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CapsuleSealRequest`
        """
        model = CapsuleSealRequest()
        if include_optional:
            return CapsuleSealRequest(
                capsule_tags = [
                    antimatter_api.models.tag.Tag(
                        name = 'tag.antimatter.io/pii/name', 
                        value = '', 
                        type = 'string', 
                        source = '', 
                        hook_version = '4.072888001528021798096225500850762068629.39333975650685139102691291732729478601482026', )
                    ],
                span_tags = antimatter_api.models.tag_summary.TagSummary(
                    unique_tags = [
                        antimatter_api.models.tag_summary_unique_tags_inner.TagSummary_uniqueTags_inner(
                            tag = antimatter_api.models.tag.Tag(
                                name = 'tag.antimatter.io/pii/name', 
                                value = '', 
                                type = 'string', 
                                source = '', 
                                hook_version = '4.072888001528021798096225500850762068629.39333975650685139102691291732729478601482026', ), 
                            occurrences = 56, )
                        ], 
                    elided_tags = [
                        antimatter_api.models.tag_summary_elided_tags_inner.TagSummary_elidedTags_inner(
                            tag_name = '', 
                            num_unique_tags = 56, 
                            total_occurrences = 56, )
                        ], ),
                size = 56,
                rows = 56
            )
        else:
            return CapsuleSealRequest(
                capsule_tags = [
                    antimatter_api.models.tag.Tag(
                        name = 'tag.antimatter.io/pii/name', 
                        value = '', 
                        type = 'string', 
                        source = '', 
                        hook_version = '4.072888001528021798096225500850762068629.39333975650685139102691291732729478601482026', )
                    ],
                span_tags = antimatter_api.models.tag_summary.TagSummary(
                    unique_tags = [
                        antimatter_api.models.tag_summary_unique_tags_inner.TagSummary_uniqueTags_inner(
                            tag = antimatter_api.models.tag.Tag(
                                name = 'tag.antimatter.io/pii/name', 
                                value = '', 
                                type = 'string', 
                                source = '', 
                                hook_version = '4.072888001528021798096225500850762068629.39333975650685139102691291732729478601482026', ), 
                            occurrences = 56, )
                        ], 
                    elided_tags = [
                        antimatter_api.models.tag_summary_elided_tags_inner.TagSummary_elidedTags_inner(
                            tag_name = '', 
                            num_unique_tags = 56, 
                            total_occurrences = 56, )
                        ], ),
                size = 56,
                rows = 56,
        )
        """

    def testCapsuleSealRequest(self):
        """Test CapsuleSealRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

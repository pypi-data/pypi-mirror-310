# coding: utf-8

"""
    Antimatter Public API

    Interact with the Antimatter Cloud API

    The version of the OpenAPI document: 2.0.13
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from antimatter_api.models.data_tagging_hook_input_records_inner import DataTaggingHookInputRecordsInner

class TestDataTaggingHookInputRecordsInner(unittest.TestCase):
    """DataTaggingHookInputRecordsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataTaggingHookInputRecordsInner:
        """Test DataTaggingHookInputRecordsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataTaggingHookInputRecordsInner`
        """
        model = DataTaggingHookInputRecordsInner()
        if include_optional:
            return DataTaggingHookInputRecordsInner(
                elements = [
                    antimatter_api.models.data_tagging_hook_input_records_inner_elements_inner.DataTaggingHookInput_records_inner_elements_inner(
                        content = 'some sentence', 
                        path = 'foo.bar[2].baz', )
                    ]
            )
        else:
            return DataTaggingHookInputRecordsInner(
                elements = [
                    antimatter_api.models.data_tagging_hook_input_records_inner_elements_inner.DataTaggingHookInput_records_inner_elements_inner(
                        content = 'some sentence', 
                        path = 'foo.bar[2].baz', )
                    ],
        )
        """

    def testDataTaggingHookInputRecordsInner(self):
        """Test DataTaggingHookInputRecordsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

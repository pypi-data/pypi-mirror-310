# coding: utf-8

"""
    Antimatter Public API

    Interact with the Antimatter Cloud API

    The version of the OpenAPI document: 2.0.13
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from antimatter_api.models.read_context_details import ReadContextDetails

class TestReadContextDetails(unittest.TestCase):
    """ReadContextDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReadContextDetails:
        """Test ReadContextDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReadContextDetails`
        """
        model = ReadContextDetails()
        if include_optional:
            return ReadContextDetails(
                name = 'ic3::ss7djuy2zme',
                summary = '',
                description = '',
                disable_read_logging = True,
                key_cache_ttl = 0,
                required_hooks = [
                    antimatter_api.models.read_context_required_hook.ReadContextRequiredHook(
                        hook = 'ar1c2v7s6djuy1z', 
                        constraint = '>072888001528021798096225500850762068629.39333975650685139102691291732729478601482026.0912727550417577019298162864882916633228770521', 
                        write_context = 'ar2c3v8s7djuy2zme', )
                    ],
                read_parameters = [
                    antimatter_api.models.read_context_parameter.ReadContextParameter(
                        key = '0', 
                        required = True, 
                        description = '', )
                    ],
                attached_policies = [
                    antimatter_api.models.read_context_details_attached_policies_inner.ReadContextDetails_attachedPolicies_inner(
                        policy_id = 'ic3::pl-ckec0l3o4gi7xhk0', 
                        policy_name = '/B98JLe5iL60 aa -Ctq9dcsc-2 790gAa7Xa5u50ArrlGpCQjkQVRmfnjddwcDM-9fvlxVU94mAsDwtJsoLm/U1QzcAPbMGoFtYYnOi2Uynm6 iBPXDeXK6FerdNFRGYVtmAOl4_Cq1Rl3hC1QiYJ4AOF66DBqQaK8/sLp3g3V8O 5oXadaJrr2kIA7m74_YUSTN PJy7dgSQzlarQkEaQ6M', 
                        imported = True, 
                        source_domain_id = 'dm-dFZPn3BZqho', 
                        source_domain_name = '', 
                        status = 'Attached', 
                        status_source = 'Default', )
                    ],
                imported = True,
                source_domain_id = 'dm-dFZPn3BZqho',
                source_domain_name = '',
                policy_assembly = 'YQ=='
            )
        else:
            return ReadContextDetails(
                name = 'ic3::ss7djuy2zme',
                summary = '',
                description = '',
                disable_read_logging = True,
                key_cache_ttl = 0,
                read_parameters = [
                    antimatter_api.models.read_context_parameter.ReadContextParameter(
                        key = '0', 
                        required = True, 
                        description = '', )
                    ],
                imported = True,
        )
        """

    def testReadContextDetails(self):
        """Test ReadContextDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

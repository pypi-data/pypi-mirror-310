# coding: utf-8

"""
    Antimatter Public API

    Interact with the Antimatter Cloud API

    The version of the OpenAPI document: 2.0.13
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from antimatter_api.api.authentication_api import AuthenticationApi


class TestAuthenticationApi(unittest.TestCase):
    """AuthenticationApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AuthenticationApi()

    def tearDown(self) -> None:
        pass

    def test_domain_authenticate(self) -> None:
        """Test case for domain_authenticate

        Authenticate with a domain
        """
        pass

    def test_domain_contact_issue_verify(self) -> None:
        """Test case for domain_contact_issue_verify

        Issue a new verification request
        """
        pass

    def test_domain_contact_verify(self) -> None:
        """Test case for domain_contact_verify

        Verify an admin contact email
        """
        pass

    def test_domain_delete_capability(self) -> None:
        """Test case for domain_delete_capability

        Delete a capability
        """
        pass

    def test_domain_delete_identity_provider(self) -> None:
        """Test case for domain_delete_identity_provider

        Delete an identity provider
        """
        pass

    def test_domain_delete_identity_provider_principal(self) -> None:
        """Test case for domain_delete_identity_provider_principal

        Delete identity provider principal
        """
        pass

    def test_domain_get_capabilities(self) -> None:
        """Test case for domain_get_capabilities

        Get the domain capabilities
        """
        pass

    def test_domain_get_capability(self) -> None:
        """Test case for domain_get_capability

        Get a single capability
        """
        pass

    def test_domain_get_identity_group_providers(self) -> None:
        """Test case for domain_get_identity_group_providers

        Get supported group identity provider details
        """
        pass

    def test_domain_get_identity_provider(self) -> None:
        """Test case for domain_get_identity_provider

        Get an identity provider's details
        """
        pass

    def test_domain_get_identity_provider_principal(self) -> None:
        """Test case for domain_get_identity_provider_principal

        Get identity provider principal details
        """
        pass

    def test_domain_get_identity_provider_principals(self) -> None:
        """Test case for domain_get_identity_provider_principals

        Get an identity provider's principals
        """
        pass

    def test_domain_insert_identity_provider_principal(self) -> None:
        """Test case for domain_insert_identity_provider_principal

        Create a new principal for the provider
        """
        pass

    def test_domain_list_identity_providers(self) -> None:
        """Test case for domain_list_identity_providers

        Get a summary of the domain's Identity Providers
        """
        pass

    def test_domain_put_capability(self) -> None:
        """Test case for domain_put_capability

        Create or update a capability
        """
        pass

    def test_domain_put_vendor_settings(self) -> None:
        """Test case for domain_put_vendor_settings

        Create or update vendor settings
        """
        pass

    def test_domain_update_identity_provider_principal(self) -> None:
        """Test case for domain_update_identity_provider_principal

        Update identity provider principal capabilities
        """
        pass

    def test_domain_upsert_identity_provider(self) -> None:
        """Test case for domain_upsert_identity_provider

        Create/Update an identity provider
        """
        pass


if __name__ == '__main__':
    unittest.main()

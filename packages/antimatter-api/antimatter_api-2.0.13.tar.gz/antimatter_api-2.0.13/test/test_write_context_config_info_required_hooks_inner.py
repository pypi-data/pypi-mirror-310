# coding: utf-8

"""
    Antimatter Public API

    Interact with the Antimatter Cloud API

    The version of the OpenAPI document: 2.0.13
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from antimatter_api.models.write_context_config_info_required_hooks_inner import WriteContextConfigInfoRequiredHooksInner

class TestWriteContextConfigInfoRequiredHooksInner(unittest.TestCase):
    """WriteContextConfigInfoRequiredHooksInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WriteContextConfigInfoRequiredHooksInner:
        """Test WriteContextConfigInfoRequiredHooksInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WriteContextConfigInfoRequiredHooksInner`
        """
        model = WriteContextConfigInfoRequiredHooksInner()
        if include_optional:
            return WriteContextConfigInfoRequiredHooksInner(
                hook = 'ar1c2v7s6djuy1z',
                constraint = '>072888001528021798096225500850762068629.39333975650685139102691291732729478601482026.0912727550417577019298162864882916633228770521',
                mode = 'sync'
            )
        else:
            return WriteContextConfigInfoRequiredHooksInner(
                hook = 'ar1c2v7s6djuy1z',
                constraint = '>072888001528021798096225500850762068629.39333975650685139102691291732729478601482026.0912727550417577019298162864882916633228770521',
                mode = 'sync',
        )
        """

    def testWriteContextConfigInfoRequiredHooksInner(self):
        """Test WriteContextConfigInfoRequiredHooksInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

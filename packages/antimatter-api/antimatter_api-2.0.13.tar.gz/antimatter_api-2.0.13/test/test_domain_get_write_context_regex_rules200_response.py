# coding: utf-8

"""
    Antimatter Public API

    Interact with the Antimatter Cloud API

    The version of the OpenAPI document: 2.0.13
    Contact: support@antimatter.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from antimatter_api.models.domain_get_write_context_regex_rules200_response import DomainGetWriteContextRegexRules200Response

class TestDomainGetWriteContextRegexRules200Response(unittest.TestCase):
    """DomainGetWriteContextRegexRules200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DomainGetWriteContextRegexRules200Response:
        """Test DomainGetWriteContextRegexRules200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DomainGetWriteContextRegexRules200Response`
        """
        model = DomainGetWriteContextRegexRules200Response()
        if include_optional:
            return DomainGetWriteContextRegexRules200Response(
                rules = [
                    antimatter_api.models.write_context_regex_rule.WriteContextRegexRule(
                        id = 'rl-w8q6zgckec0l3o4g', 
                        pattern = '', 
                        match_on_key = True, 
                        span_tags = [
                            antimatter_api.models.write_context_classifier_tag.WriteContextClassifierTag(
                                name = 'tag.antimatter.io/pii/name', 
                                value = '', 
                                type = 'string', )
                            ], 
                        capsule_tags = [
                            antimatter_api.models.write_context_classifier_tag.WriteContextClassifierTag(
                                name = 'tag.antimatter.io/pii/name', 
                                value = '', 
                                type = 'string', )
                            ], )
                    ]
            )
        else:
            return DomainGetWriteContextRegexRules200Response(
        )
        """

    def testDomainGetWriteContextRegexRules200Response(self):
        """Test DomainGetWriteContextRegexRules200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

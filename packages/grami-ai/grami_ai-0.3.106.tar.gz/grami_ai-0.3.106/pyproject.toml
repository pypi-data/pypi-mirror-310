[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grami-ai"
version = "0.3.106"
description = "Growth and Relationship AI Management Infrastructure"
readme = "README.md"
requires-python = ">=3.10,<3.13"
license = {text = "MIT"}
authors = [
    {name = "YAFATek Solutions", email = "support@yafatek.dev"}
]
keywords = [
    "ai", "agent", "framework", "marketing", 
    "async", "generative-ai", "llm", 
    "machine-learning", "artificial-intelligence"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
]

dependencies = [
    "openai>=1.14.3",
    "anthropic>=0.20.0",
    "google-generativeai>=0.7.1",
    "ollama>=0.1.6",
    "aiohttp>=3.9.3",
    "asyncio>=3.4.3",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv==1.0.0",
    "redis>=5.0.1",
    "fastapi>=0.110.0",
    "uvicorn>=0.27.1",
    "google-api-python-client==2.123.0",
    "tenacity>=8.2.3",
    "typing-extensions>=4.10.0",
    "rich>=13.7.0",
    "websockets>=12.0",
    "boto3==1.34.28",
    "botocore==1.34.28",
    "pytest-asyncio==0.23.2",
    "pytest>=7.4.4",
    "structlog>=24.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.2",
    "mypy>=1.8.0",
    "ruff>=0.2.2",
    "coverage>=7.4.3",
]
docs = [
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/WAFIR-Cloud/grami-ai"
Repository = "https://github.com/WAFIR-Cloud/grami-ai"
Issues = "https://github.com/WAFIR-Cloud/grami-ai/issues"

[project.scripts]
"grami-ai" = "grami_ai.cli:main"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "ANN", "ASYNC"]
ignore = ["ANN101", "ANN102"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["grami_ai"]
omit = [
    "tests/*",
    "examples/*",
]

[tool.black]
line-length = 120
target-version = ['py310']

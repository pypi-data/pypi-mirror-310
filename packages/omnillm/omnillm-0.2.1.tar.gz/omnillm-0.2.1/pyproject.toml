[project]
name = "omnillm"
version = "0.2.1"
description = "A unified LLM API utility package."
authors = [
    { name = "Zsbyqx20", email = "112002598+Zsbyqx20@users.noreply.github.com" },
]
dependencies = [
    "openai>=1.54.4",
    "anthropic>=0.39.0",
    "python-dotenv>=1.0.1",
    "httpx[socks]>=0.27.2",
    "pillow>=11.0.0",
    "requests>=2.32.3",
]
requires-python = ">=3.12"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[project.license]
text = "Apache-2.0"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.build]
excludes = [
    "tests/",
]

[tool.pdm.scripts]
_ruff_check_format = "ruff format . --check --preview"
_ruff_check = "ruff check . --preview"
_pyright = "pyright"
_ruff_sort_imports = "ruff check --select I --fix . --preview"
_ruff_format_code = "ruff format . --preview"
_semversioner_release = "semversioner release"
_test_all = "pytest -v -ra -q -n auto --cov=omnillm --cov-report=term-missing --cov-report=html"
ci_test = "pytest"
fix = "ruff check --fix . --preview"

[tool.pdm.scripts._semversioner_changelog]
shell = "semversioner changelog > CHANGELOG.md"

[tool.pdm.scripts._semversioner_update_toml_version]
shell = "update-toml update --path project.version --value $(pdm run semversioner current-version)"

[tool.pdm.scripts.format]
composite = [
    "_ruff_sort_imports",
    "_ruff_format_code",
]

[tool.pdm.scripts.check]
composite = [
    "_ruff_check_format",
    "_ruff_check",
    "_pyright",
]

[tool.pdm.scripts.release]
composite = [
    "_semversioner_release",
    "_semversioner_changelog",
    "_semversioner_update_toml_version",
]

[tool.pdm.scripts.test]
composite = [
    "_test_all",
]

[tool.pytest.ini_options]
pythonpath = [
    "src",
]
testpaths = [
    "tests",
]
python_files = [
    "*_test.py",
    "test_*.py",
]
python_classes = [
    "Test*",
    "*Test",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_default_fixture_loop_scope = "function"

[dependency-groups]
dev = [
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.6.1",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.7.4",
    "pyright>=1.1.389",
    "semversioner>=2.0.5",
    "update-toml>=0.2.1",
    "reuse>=5.0.2",
    "ipykernel>=6.29.5",
]

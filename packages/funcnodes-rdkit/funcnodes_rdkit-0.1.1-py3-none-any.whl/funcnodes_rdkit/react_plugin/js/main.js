const e = React;
e.default = e;
var r={d:(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r)},t={};r.d(t,{A:()=>v});const o=(a={default:()=>e.default,useEffect:()=>e.useEffect,useRef:()=>e.useRef},d={},r.d(d,a),d),n={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};var a,d;let u;const i=new Uint8Array(16);function c(){if(!u&&(u="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!u))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return u(i)}const l=[];for(let e=0;e<256;++e)l.push((e+256).toString(16).slice(1));const s=function(e,r,t){if(n.randomUUID&&!r&&!e)return n.randomUUID();const o=(e=e||{}).random||(e.rng||c)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,r){t=t||0;for(let e=0;e<16;++e)r[t+e]=o[e];return r}return function(e,r=0){return l[e[r+0]]+l[e[r+1]]+l[e[r+2]]+l[e[r+3]]+"-"+l[e[r+4]]+l[e[r+5]]+"-"+l[e[r+6]]+l[e[r+7]]+"-"+l[e[r+8]]+l[e[r+9]]+"-"+l[e[r+10]]+l[e[r+11]]+l[e[r+12]]+l[e[r+13]]+l[e[r+14]]+l[e[r+15]]}(o)};var f={includeToolbar:!0,oneMolecule:!0},p=function(e){var r=e.id,t=e.width,n=e.height,a=e.data,d=e.canvasOptions,u=(0,o.useRef)(null);return(0,o.useEffect)((function(){var e=new window.ChemDoodle.SketcherCanvas(r,void 0,void 0,d);if(e.toolbarManager.setup(),a&&(console.log("AAA",a),a.value)){var t=void 0;if("mol"===a.format)try{t=window.ChemDoodle.readMOL(a.value)}catch(e){}t&&e.loadMolecule(t)}u.current=e}),[]),o.default.createElement("canvas",{id:r,width:t,height:n})};const m=function(e){var r=e.io;return o.default.createElement(p,{id:"sketcher-canvas-"+s(),canvasOptions:f,data:{value:r.value,format:"mol"}})},v={RendererPlugin:{handle_preview_renderers:{},data_overlay_renderers:{"rdkit.Chem.rdchem.EditableMol":m},data_preview_renderers:{},data_view_renderers:{"rdkit.Chem.rdchem.EditableMol":m},input_renderers:{}}};var h=t.A;export{h as default};
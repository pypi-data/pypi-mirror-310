OpenShadingLanguage 1.00
# Compiled by oslc 1.13.7.0
# options: -q -O2 -I/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders -I/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders -o /Users/blender/git/blender-v430/build_x86_64_release/intern/cycles/kernel/osl/shaders/node_texture_coordinate.oso
shader node_texture_coordinate
param	int	is_background	0		%read{0,0} %write{2147483647,-1}
param	int	is_volume	0		%read{14,14} %write{2147483647,-1}
param	int	from_dupli	0		%read{11,68} %write{2147483647,-1}
param	int	use_transform	0		%read{37,37} %write{2147483647,-1}
param	string	bump_offset	"center"		%read{52,66} %write{2147483647,-1}
param	matrix	object_itfm	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{38,38} %write{2147483647,-1} %derivs
oparam	point	Generated	0 0 0		%read{19,71} %write{1,71} %derivs
oparam	point	UV	0 0 0		%read{58,73} %write{2,73} %derivs
oparam	point	Object	0 0 0		%read{60,75} %write{3,75} %derivs
oparam	point	Camera	0 0 0		%read{62,77} %write{7,77} %derivs
oparam	point	Window	0 0 0		%read{64,79} %write{8,80} %derivs
oparam	normal	Normal	0 0 0		%read{2147483647,-1} %write{9,45}
oparam	point	Reflection	0 0 0		%read{2147483647,-1} %write{10,51}
global	point	P	%read{1,44} %write{2147483647,-1} %derivs
global	vector	I	%read{10,50} %write{2147483647,-1}
global	normal	N	%read{9,49} %write{2147483647,-1}
global	float	u	%read{34,36} %write{2147483647,-1} %derivs
global	float	v	%read{35,35} %write{2147483647,-1} %derivs
local	point	___365_Pcam	%read{5,5} %write{4,4} %derivs
local	matrix	___368_tfm	%read{19,19} %write{17,17} %derivs
local	float	___369_is_light	%read{31,31} %write{26,26}
const	point	$const1	0 0 0		%read{2,4} %write{2147483647,-1}
const	string	$const2	"camera"		%read{4,42} %write{2147483647,-1}
const	string	$const3	"world"		%read{4,45} %write{2147483647,-1}
temp	point	$tmp2	%read{7,7} %write{5,5} %derivs
const	string	$const4	"transform"		%read{6,43} %write{2147483647,-1}
const	string	$const5	"common"		%read{7,44} %write{2147483647,-1}
temp	int	$tmp3	%read{2147483647,-1} %write{8,8}
const	string	$const6	"NDC"		%read{8,44} %write{2147483647,-1}
temp	int	$tmp4	%read{2147483647,-1} %write{12,12}
const	string	$const7	"geom:dupli_generated"		%read{12,12} %write{2147483647,-1}
temp	int	$tmp5	%read{2147483647,-1} %write{13,13}
const	string	$const8	"geom:dupli_uv"		%read{13,13} %write{2147483647,-1}
const	string	$const9	"object"		%read{16,45} %write{2147483647,-1}
temp	int	$tmp6	%read{18,18} %write{17,17}
const	string	$const10	"geom:generated_transform"		%read{17,17} %write{2147483647,-1}
temp	int	$tmp7	%read{2147483647,-1} %write{20,20}
const	string	$const11	"geom:uv"		%read{20,27} %write{2147483647,-1}
temp	int	$tmp8	%read{22,22} %write{21,21}
const	string	$const12	"geom:generated"		%read{21,21} %write{2147483647,-1}
temp	int	$tmp9	%read{23,23} %write{22,22}
const	int	$const13	0		%read{22,68} %write{2147483647,-1}
temp	int	$tmp10	%read{2147483647,-1} %write{26,26}
const	string	$const14	"object:is_light"		%read{26,26} %write{2147483647,-1}
temp	int	$tmp11	%read{28,28} %write{27,27}
temp	int	$tmp12	%read{29,29} %write{28,28}
temp	int	$tmp13	%read{30,33} %write{29,32}
temp	int	$tmp14	%read{32,32} %write{31,31}
const	float	$const15	0		%read{31,80} %write{2147483647,-1}
const	float	$const16	1		%read{34,34} %write{2147483647,-1}
temp	float	$tmp15	%read{35,35} %write{34,34} %derivs
temp	float	$tmp16	%read{36,36} %write{35,35} %derivs
temp	vector	$tmp17	%read{51,51} %write{50,50}
const	string	$const17	"reflect"		%read{46,46} %write{2147483647,-1}
const	int	$const18	2		%read{80,80} %write{2147483647,-1}
temp	float	$tmp18	%read{48,48} %write{47,47}
temp	float	$tmp19	%read{49,49} %write{48,48}
const	float	$const19	2		%read{48,48} %write{2147483647,-1}
temp	vector	$tmp20	%read{50,50} %write{49,49}
const	string	$const20	"dx"		%read{52,52} %write{2147483647,-1}
temp	int	$tmp21	%read{53,53} %write{52,52}
temp	int	$tmp22	%read{55,55} %write{54,54}
temp	vector	$tmp23	%read{57,57} %write{56,56} %derivs
temp	vector	$tmp24	%read{59,59} %write{58,58} %derivs
temp	vector	$tmp25	%read{61,61} %write{60,60} %derivs
temp	vector	$tmp26	%read{63,63} %write{62,62} %derivs
temp	vector	$tmp27	%read{65,65} %write{64,64} %derivs
const	string	$const21	"dy"		%read{66,66} %write{2147483647,-1}
temp	int	$tmp28	%read{67,67} %write{66,66}
temp	int	$tmp29	%read{69,69} %write{68,68}
temp	vector	$tmp30	%read{71,71} %write{70,70} %derivs
temp	vector	$tmp31	%read{73,73} %write{72,72} %derivs
temp	vector	$tmp32	%read{75,75} %write{74,74} %derivs
temp	vector	$tmp33	%read{77,77} %write{76,76} %derivs
temp	vector	$tmp34	%read{79,79} %write{78,78} %derivs
code ___main___
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:23
#   if (is_background) {
	if		is_background 11 52 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{23} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:24
#     Generated = P;
	assign		Generated P 	%line{24} %argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:25
#     UV = point(0.0, 0.0, 0.0);
	assign		UV $const1 	%line{25} %argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:26
#     Object = P;
	assign		Object P 	%line{26} %argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:27
#     point Pcam = transform("camera", "world", point(0, 0, 0));
	transform	___365_Pcam $const2 $const3 $const1 	%line{27} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:28
#     Camera = transform("camera", P + Pcam);
	add		$tmp2 P ___365_Pcam 	%line{28} %argrw{"wrr"}
	functioncall	$const4 8 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Camera $const5 $const2 $tmp2 	%filename{"/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:29
#     getattribute("NDC", Window);
	getattribute	$tmp3 $const6 Window 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{29} %argrw{"wrw"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:30
#     Normal = N;
	assign		Normal N 	%line{30} %argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:31
#     Reflection = I;
	assign		Reflection I 	%line{31} %argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:34
#     if (from_dupli) {
	if		from_dupli 14 37 	%line{34} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:35
#       getattribute("geom:dupli_generated", Generated);
	getattribute	$tmp4 $const7 Generated 	%line{35} %argrw{"wrw"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:36
#       getattribute("geom:dupli_uv", UV);
	getattribute	$tmp5 $const8 UV 	%line{36} %argrw{"wrw"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:38
#     else if (is_volume) {
	if		is_volume 21 37 	%line{38} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:39
#       Generated = transform("object", P);
	functioncall	$const4 17 	%line{39} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Generated $const5 $const9 P 	%filename{"/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:42
#       if (getattribute("geom:generated_transform", tfm))
	getattribute	$tmp6 $const10 ___368_tfm 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{42} %argrw{"wrw"}
	if		$tmp6 20 20 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:43
#         Generated = transform(tfm, Generated);
	transform	Generated ___368_tfm Generated 	%line{43} %argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:45
#       getattribute("geom:uv", UV);
	getattribute	$tmp7 $const11 UV 	%line{45} %argrw{"wrw"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:48
#       if (!getattribute("geom:generated", Generated)) {
	getattribute	$tmp8 $const12 Generated 	%line{48} %argrw{"wrw"}
	eq		$tmp9 $tmp8 $const13 	%argrw{"wrr"}
	if		$tmp9 26 26 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:49
#         Generated = transform("object", P);
	functioncall	$const4 26 	%line{49} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Generated $const5 $const9 P 	%filename{"/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:52
#       getattribute("object:is_light", is_light);
	getattribute	$tmp10 $const14 ___369_is_light 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{52} %argrw{"wrw"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:53
#       if (!getattribute("geom:uv", UV) && is_light) {
	getattribute	$tmp11 $const11 UV 	%line{53} %argrw{"wrw"}
	eq		$tmp12 $tmp11 $const13 	%argrw{"wrr"}
	neq		$tmp13 $tmp12 $const13 	%argrw{"wrr"}
	if		$tmp13 33 33 	%argrw{"r"}
	neq		$tmp14 ___369_is_light $const15 	%argrw{"wrr"}
	assign		$tmp13 $tmp14 	%argrw{"wr"}
	if		$tmp13 37 37 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:54
#         UV = point(1.0 - u - v, u, 0.0);
	sub		$tmp15 $const16 u 	%line{54} %argrw{"wrr"}
	sub		$tmp16 $tmp15 v 	%argrw{"wrr"}
	point		UV $tmp16 u $const15 	%argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:58
#     if (use_transform) {
	if		use_transform 39 41 	%line{58} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:59
#       Object = transform(object_itfm, P);
	transform	Object object_itfm P 	%line{59} %argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:62
#       Object = transform("object", P);
	functioncall	$const4 41 	%line{62} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Object $const5 $const9 P 	%filename{"/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:64
#     Camera = transform("camera", P);
	functioncall	$const4 43 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{64} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Camera $const5 $const2 P 	%filename{"/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:65
#     Window = transform("NDC", P);
	functioncall	$const4 45 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{65} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Window $const5 $const6 P 	%filename{"/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:66
#     Normal = transform("world", "object", N);
	transformn	Normal $const3 $const9 N 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{66} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:67
#     Reflection = -reflect(I, N);
	functioncall	$const17 51 	%line{67} %argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h:212
# vector reflect (vector I, vector N) { return I - 2*dot(N,I)*N; }
	dot		$tmp18 N I 	%filename{"/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h"} %line{212} %argrw{"wrr"}
	mul		$tmp19 $const19 $tmp18 	%argrw{"wrr"}
	mul		$tmp20 $tmp19 N 	%argrw{"wrr"}
	sub		$tmp17 I $tmp20 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:67
#     Reflection = -reflect(I, N);
	neg		Reflection $tmp17 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{67} %argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:70
#   if (bump_offset == "dx") {
	eq		$tmp21 bump_offset $const20 	%line{70} %argrw{"wrr"}
	if		$tmp21 66 80 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:71
#     if (!from_dupli) {
	eq		$tmp22 from_dupli $const13 	%line{71} %argrw{"wrr"}
	if		$tmp22 60 60 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:72
#       Generated += Dx(Generated);
	Dx		$tmp23 Generated 	%line{72} %argrw{"wr"} %argderivs{1}
	add		Generated Generated $tmp23 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:73
#       UV += Dx(UV);
	Dx		$tmp24 UV 	%line{73} %argrw{"wr"} %argderivs{1}
	add		UV UV $tmp24 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:75
#     Object += Dx(Object);
	Dx		$tmp25 Object 	%line{75} %argrw{"wr"} %argderivs{1}
	add		Object Object $tmp25 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:76
#     Camera += Dx(Camera);
	Dx		$tmp26 Camera 	%line{76} %argrw{"wr"} %argderivs{1}
	add		Camera Camera $tmp26 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:77
#     Window += Dx(Window);
	Dx		$tmp27 Window 	%line{77} %argrw{"wr"} %argderivs{1}
	add		Window Window $tmp27 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:79
#   else if (bump_offset == "dy") {
	eq		$tmp28 bump_offset $const21 	%line{79} %argrw{"wrr"}
	if		$tmp28 80 80 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:80
#     if (!from_dupli) {
	eq		$tmp29 from_dupli $const13 	%line{80} %argrw{"wrr"}
	if		$tmp29 74 74 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:81
#       Generated += Dy(Generated);
	Dy		$tmp30 Generated 	%line{81} %argrw{"wr"} %argderivs{1}
	add		Generated Generated $tmp30 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:82
#       UV += Dy(UV);
	Dy		$tmp31 UV 	%line{82} %argrw{"wr"} %argderivs{1}
	add		UV UV $tmp31 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:84
#     Object += Dy(Object);
	Dy		$tmp32 Object 	%line{84} %argrw{"wr"} %argderivs{1}
	add		Object Object $tmp32 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:85
#     Camera += Dy(Camera);
	Dy		$tmp33 Camera 	%line{85} %argrw{"wr"} %argderivs{1}
	add		Camera Camera $tmp33 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:86
#     Window += Dy(Window);
	Dy		$tmp34 Window 	%line{86} %argrw{"wr"} %argderivs{1}
	add		Window Window $tmp34 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:89
#   Window[2] = 0.0;
	compassign	Window $const18 $const15 	%line{89} %argrw{"wrr"}
	end

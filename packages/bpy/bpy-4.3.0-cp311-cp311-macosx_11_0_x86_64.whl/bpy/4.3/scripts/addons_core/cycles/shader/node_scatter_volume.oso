OpenShadingLanguage 1.00
# Compiled by oslc 1.13.7.0
# options: -q -O2 -I/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders -I/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders -o /Users/blender/git/blender-v430/build_x86_64_release/intern/cycles/kernel/osl/shaders/node_scatter_volume.oso
shader node_scatter_volume
param	string	phase	"Henyey-Greenstein"		%read{1,10} %write{2147483647,-1}
param	color	Color	0.800000012 0.800000012 0.800000012		%read{37,37} %write{2147483647,-1}
param	float	Density	1		%read{36,36} %write{2147483647,-1}
param	float	Anisotropy	0		%read{6,35} %write{2147483647,-1}
param	float	IOR	1.33000004		%read{3,3} %write{2147483647,-1}
param	float	Backscatter	0.100000001		%read{3,3} %write{2147483647,-1}
param	float	Alpha	0.5		%read{6,6} %write{2147483647,-1}
param	float	Diameter	20		%read{12,12} %write{2147483647,-1}
oparam	closure color	Volume			%read{2147483647,-1} %write{38,38}
local	closure color	scatter	%read{38,38} %write{0,35}
local	float	___368_d	%read{13,24} %write{12,12}
local	float	___368_aniso_hg	%read{28,28} %write{15,15}
local	float	___368_aniso_d	%read{29,29} %write{19,19}
local	float	___368_alpha	%read{29,29} %write{23,23}
local	float	___368_mixture	%read{31,33} %write{27,27}
const	int	$const1	0		%read{0,0} %write{2147483647,-1}
const	string	$const2	"Fournier-Forand"		%read{1,1} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	string	$const3	"fournier_forand"		%read{3,3} %write{2147483647,-1}
const	string	$const4	"Draine"		%read{4,4} %write{2147483647,-1}
temp	int	$tmp2	%read{5,5} %write{4,4}
const	string	$const5	"draine"		%read{6,29} %write{2147483647,-1}
const	string	$const6	"Rayleigh"		%read{7,7} %write{2147483647,-1}
temp	int	$tmp3	%read{8,8} %write{7,7}
const	string	$const7	"rayleigh"		%read{9,9} %write{2147483647,-1}
const	string	$const8	"Mie"		%read{10,10} %write{2147483647,-1}
temp	int	$tmp4	%read{11,11} %write{10,10}
const	float	$const9	2		%read{12,12} %write{2147483647,-1}
const	float	$const10	-0.0990566984		%read{14,14} %write{2147483647,-1}
const	float	$const11	1.67154002		%read{13,13} %write{2147483647,-1}
temp	float	$tmp5	%read{14,14} %write{13,13}
temp	float	$tmp6	%read{15,15} %write{14,14}
const	float	$const12	-2.20678997		%read{17,17} %write{2147483647,-1}
const	float	$const13	3.91029		%read{16,16} %write{2147483647,-1}
temp	float	$tmp7	%read{17,17} %write{16,16}
temp	float	$tmp8	%read{18,18} %write{17,17}
const	float	$const14	0.428934008		%read{18,18} %write{2147483647,-1}
temp	float	$tmp9	%read{19,19} %write{18,18}
const	float	$const15	3.62489009		%read{22,22} %write{2147483647,-1}
const	float	$const16	8.29288006		%read{21,21} %write{2147483647,-1}
const	float	$const17	5.52825022		%read{20,20} %write{2147483647,-1}
temp	float	$tmp10	%read{21,21} %write{20,20}
temp	float	$tmp11	%read{22,22} %write{21,21}
temp	float	$tmp12	%read{23,23} %write{22,22}
const	float	$const18	-0.599084973		%read{25,25} %write{2147483647,-1}
const	float	$const19	0.641583025		%read{24,24} %write{2147483647,-1}
temp	float	$tmp13	%read{25,25} %write{24,24}
temp	float	$tmp14	%read{26,26} %write{25,25}
const	float	$const20	0.665888011		%read{26,26} %write{2147483647,-1}
temp	float	$tmp15	%read{27,27} %write{26,26}
temp	closure color	$tmp16	%read{32,32} %write{28,28}
const	string	$const21	"henyey_greenstein"		%read{28,35} %write{2147483647,-1}
temp	closure color	$tmp17	%read{33,33} %write{29,29}
const	string	$const22	"mix"		%read{30,30} %write{2147483647,-1}
temp	float	$tmp18	%read{32,32} %write{31,31}
const	float	$const24	1		%read{31,31} %write{2147483647,-1}
temp	closure color	$tmp19	%read{34,34} %write{32,32}
temp	closure color	$tmp20	%read{34,34} %write{33,33}
temp	float	$tmp21	%read{37,37} %write{36,36}
const	float	$const25	0		%read{36,36} %write{2147483647,-1}
temp	color	$tmp22	%read{38,38} %write{37,37}
code ___main___
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:17
#   closure color scatter = 0;
	assign		scatter $const1 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl"} %line{17} %argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:18
#   if (phase == "Fournier-Forand") {
	eq		$tmp1 phase $const2 	%line{18} %argrw{"wrr"}
	if		$tmp1 4 36 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:19
#     scatter = fournier_forand(Backscatter, IOR);
	closure		scatter $const3 Backscatter IOR 	%line{19} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:21
#   else if (phase == "Draine") {
	eq		$tmp2 phase $const4 	%line{21} %argrw{"wrr"}
	if		$tmp2 7 36 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:22
#     scatter = draine(Anisotropy, Alpha);
	closure		scatter $const5 Anisotropy Alpha 	%line{22} %argrw{"wrrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:24
#   else if (phase == "Rayleigh") {
	eq		$tmp3 phase $const6 	%line{24} %argrw{"wrr"}
	if		$tmp3 10 36 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:25
#     scatter = rayleigh();
	closure		scatter $const7 	%line{25} %argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:27
#   else if (phase == "Mie") {
	eq		$tmp4 phase $const8 	%line{27} %argrw{"wrr"}
	if		$tmp4 35 36 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:30
#     float d = max(Diameter, 2.0);
	max		___368_d Diameter $const9 	%line{30} %argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:31
#     float aniso_hg = exp(-0.0990567 / (d - 1.67154));
	sub		$tmp5 ___368_d $const11 	%line{31} %argrw{"wrr"}
	div		$tmp6 $const10 $tmp5 	%argrw{"wrr"}
	exp		___368_aniso_hg $tmp6 	%argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:32
#     float aniso_d = exp(-2.20679 / (d + 3.91029) - 0.428934);
	add		$tmp7 ___368_d $const13 	%line{32} %argrw{"wrr"}
	div		$tmp8 $const12 $tmp7 	%argrw{"wrr"}
	sub		$tmp9 $tmp8 $const14 	%argrw{"wrr"}
	exp		___368_aniso_d $tmp9 	%argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:33
#     float alpha = exp(3.62489 - 8.29288 / (d + 5.52825));
	add		$tmp10 ___368_d $const17 	%line{33} %argrw{"wrr"}
	div		$tmp11 $const16 $tmp10 	%argrw{"wrr"}
	sub		$tmp12 $const15 $tmp11 	%argrw{"wrr"}
	exp		___368_alpha $tmp12 	%argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:34
#     float mixture = exp(-0.599085 / (d - 0.641583) - 0.665888);
	sub		$tmp13 ___368_d $const19 	%line{34} %argrw{"wrr"}
	div		$tmp14 $const18 $tmp13 	%argrw{"wrr"}
	sub		$tmp15 $tmp14 $const20 	%argrw{"wrr"}
	exp		___368_mixture $tmp15 	%argrw{"wr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:35
#     scatter = mix(henyey_greenstein(aniso_hg), draine(aniso_d, alpha), mixture);
	closure		$tmp16 $const21 ___368_aniso_hg 	%line{35} %argrw{"wrr"}
	closure		$tmp17 $const5 ___368_aniso_d ___368_alpha 	%argrw{"wrrr"}
	functioncall	$const22 35 	%argrw{"r"}
# /Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h:164
# closure color mix (closure color x, closure color y, float a) { return x*(1-a) + y*a; }
	sub		$tmp18 $const24 ___368_mixture 	%filename{"/Users/blender/git/blender-v430/blender.git/lib/macos_x64/osl/share/OSL/shaders/stdosl.h"} %line{164} %argrw{"wrr"}
	mul		$tmp19 $tmp16 $tmp18 	%argrw{"wrr"}
	mul		$tmp20 $tmp17 ___368_mixture 	%argrw{"wrr"}
	add		scatter $tmp19 $tmp20 	%argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:38
#     scatter = henyey_greenstein(Anisotropy);
	closure		scatter $const21 Anisotropy 	%filename{"/Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl"} %line{38} %argrw{"wrr"}
# /Users/blender/git/blender-v430/blender.git/intern/cycles/kernel/osl/shaders/node_scatter_volume.osl:41
#   Volume = (Color * max(Density, 0.0)) * scatter;
	max		$tmp21 Density $const25 	%line{41} %argrw{"wrr"}
	mul		$tmp22 Color $tmp21 	%argrw{"wrr"}
	mul		Volume scatter $tmp22 	%argrw{"wrr"}
	end

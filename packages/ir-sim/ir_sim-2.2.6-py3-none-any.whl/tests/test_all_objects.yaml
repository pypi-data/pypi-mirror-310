world:
  height: 10  # the height of the world
  width: 10   # the height of the world
  step_time: 0.1  # 10Hz calculate each step
  sample_time: 0.1  # 10 Hz for render and data extraction 
  offset: [0, 0] # the offset of the world on x and y 
  collision_mode: 'stop'  # 'stop', 'unobstructed', 'reactive'

robot:
  - kinematics: {name: 'diff'}  # omni, diff, acker
    shape: {name: 'circle', radius: 0.2}  # radius
    # shape: {name: 'rectangle', length: 0.5, width: 0.2}  # radius
    state: [1, 1, 0]  
    goal: [9, 9, 0] 
    # acce: [3, .inf]   # acce of [linear, angular]  or [v_x, v_y] or [linear, steer]
    behavior: {name: 'dash'} # move toward to the goal directly 

    sensors: 
      - type: 'lidar2d'
        range_min: 0
        range_max: 10
        angle_range: 3.1415926
        number: 100
        noise: False
  
  - kinematics: {name: 'acker'}  # omni, diff, acker
    shape: {name: 'circle', radius: 0.2, wheel_base: 0.2}  # radius
    # shape: {name: 'rectangle', length: 0.5, width: 0.2}  # radius
    state: [5, 1, 0, 0]  
    goal: [9, 9, 0] 
    # acce: [3, .inf]   # acce of [linear, angular]  or [v_x, v_y] or [linear, steer]
    behavior: {name: 'dash'} # move toward to the goal directly 
  
obstacle:
  - kinematics: {name: 'omni'}
    behavior: {name: 'dash'}
    shape: {name: 'circle', radius: 1.0}  # radius
    state: [5, 5, 0]  
  
  - shape: {name: 'rectangle', length: 1.5, width: 1.2}  # radius
    state: [6, 5, 1] 
    behavior: {name: 'dash', range_low: [0, 0, -3.14], range_high: [10, 10, 3.14], wander: True}

  - shape: {name: 'linestring', vertices: [[5, 5], [4, 0], [1, 6]] }  # vertices
    state: [0, 0, 0] 
    unobstructed: True
  
  - number: 5
    distribution: {name: 'random', range_low: [0, 0, -3.14], range_high: [10, 10, 3.14]}
    kinematics: {name: 'diff'}
    shape:
      - {name: 'circle', radius: 0.1}  # radius
      - {name: 'circle', radius: 0.2}  # radius

    behavior: 
      - {name: 'dash', range_low: [0, 0, -3.14], range_high: [10, 10, 3.14], wander: True}

    vel_min: [-0.5, -3.14]
    vel_max: [0.5, 3.14]
    arrive_mode: position
    goal_threshold: 0.3
    plot:
      show_goal: False
      show_arrow: True

name: CI

permissions:
  contents: write

env:
  FORCE_COLOR: 1
  PYTHONUNBUFFERED: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: ['*.*.*']

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/test.txt
          pip install -e .
      - name: Run tests
        run: pytest -v

  coverage:
    name: Coverage Report
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/test.txt
          pip install coverage pytest-cov
          pip install -e .
      - name: Generate coverage
        run: |
          coverage run -m pytest -x
          coverage json -o "coverage-summary.json"
          coverage report -m
      - name: Generate badge
        uses: tj-actions/coverage-badge-py@v2
        with:
          output: coverage.svg
      - name: Commit badge
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update coverage badge"
          file_pattern: coverage.svg

name: Linting & Security

permissions:
  contents: write

env:
  FORCE_COLOR: 1
  PYTHONUNBUFFERED: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
      - name: Run pre-commit checks
        run: |
          # Stage 1: Auto-fix and commit changes
          pre-commit run --all-files || {
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add -A
            git diff --staged --quiet || {
              git commit -m "style: auto-fix linting issues"
              git push
            }
          }

          # Stage 2: Fail if issues remain
          pre-commit run --all-files || {
            echo "::error::Linting failed. Please fix remaining issues manually"
            echo "::error::Remember to pull changes since pre-commit may have auto-fixed some issues"
            echo "::group::Linting Errors"
            pre-commit run --all-files
            echo "::endgroup::"
            exit 1
          }

  security:
    name: Security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
      - name: Run security checks
        env:
          SAFETY_API_KEY: ${{ secrets.SAFETY_API_KEY }}
        run: |
          bandit -r epicure/
          safety --disable-optional-telemetry --key $SAFETY_API_KEY scan

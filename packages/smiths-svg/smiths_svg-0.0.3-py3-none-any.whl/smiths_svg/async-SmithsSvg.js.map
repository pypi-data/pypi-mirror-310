{"version":3,"file":"async-SmithsSvg.js","mappings":"guCAGA,IAOqBA,EAAS,SAAAC,GAAA,SAAAD,IAAA,O,4FAAAE,CAAA,KAAAF,G,qYAAAG,CAAA,KAAAH,EAAAI,UAAA,Q,qRAAAC,CAAAL,EAAAC,G,EAAAD,E,EAAA,EAAAM,IAAA,SAAAC,MAC1B,WACI,IAAAC,EAAqCC,KAAKC,MAAnCC,EAAEH,EAAFG,GAAIC,EAAKJ,EAALI,MAAOC,EAAQL,EAARK,SAAUN,EAAKC,EAALD,MAE5B,OACIO,IAAAA,cAAA,OAAKH,GAAIA,GAAI,qBACUC,EAAM,IACzBE,IAAAA,cAAA,SACIP,MAAOA,EACPQ,SAUI,SAAAC,GAAC,OAAIH,EAAS,CAAEN,MAAOS,EAAEC,OAAOV,OAAQ,IAK5D,I,gFAAC,CAxByB,CAASW,EAAAA,WA2BvClB,EAAUmB,aAAe,CAAC,EAE1BnB,EAAUoB,UAAY,CAIlBT,GAAIU,IAAAA,OAKJT,MAAOS,IAAAA,OAAiBC,WAKxBf,MAAOc,IAAAA,OAMPR,SAAUQ,IAAAA,K","sources":["webpack:///./src/lib/fragments/SmithsSvg.react.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * ExampleComponent is an example component.\r\n * It takes a property, `label`, and\r\n * displays it.\r\n * It renders an input with the property `value`\r\n * which is editable by the user.\r\n */\r\nexport default class SmithsSvg extends Component {\r\n    render() {\r\n        const {id, label, setProps, value} = this.props;\r\n\r\n        return (\r\n            <div id={id}>\r\n                ExampleComponent: {label}&nbsp;\r\n                <input\r\n                    value={value}\r\n                    onChange={\r\n                        /*\r\n                         * Send the new value to the parent component.\r\n                         * setProps is a prop that is automatically supplied\r\n                         * by dash's front-end (\"dash-renderer\").\r\n                         * In a Dash app, this will update the component's\r\n                         * props and send the data back to the Python Dash\r\n                         * app server if a callback uses the modified prop as\r\n                         * Input or State.\r\n                         */\r\n                        e => setProps({ value: e.target.value })\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSmithsSvg.defaultProps = {};\r\n\r\nSmithsSvg.propTypes = {\r\n    /**\r\n     * The ID used to identify this component in Dash callbacks.\r\n     */\r\n    id: PropTypes.string,\r\n\r\n    /**\r\n     * A label that will be printed when this component is rendered.\r\n     */\r\n    label: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The value displayed in the input.\r\n     */\r\n    value: PropTypes.string,\r\n\r\n    /**\r\n     * Dash-assigned callback that should be called to report property changes\r\n     * to Dash, to make them available for callbacks.\r\n     */\r\n    setProps: PropTypes.func\r\n};\r\n"],"names":["SmithsSvg","_Component","_classCallCheck","_callSuper","arguments","_inherits","key","value","_this$props","this","props","id","label","setProps","React","onChange","e","target","Component","defaultProps","propTypes","PropTypes","isRequired"],"sourceRoot":""}
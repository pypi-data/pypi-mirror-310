[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "matchviz"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Davis Vann Bennett", email = "davis.v.bennett@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "zarr==2.18", 
  "tensorstore==0.1.62", 
  "fsspec[s3]==2024.3.1", 
  "neuroglancer==2.39.2", 
  "pydantic-bigstitcher>=0.0.10", 
  "pydantic-zarr==0.7.0",
  "click==8.1.7",
  "polars>=1.0",
  "tqdm==4.66.4",
  "matplotlib",
  "xarray-ome-ngff>= 3.1.1, < 4",
  "structlog >= 24.4.0, <25"
  ]

[project.urls]
Documentation = "https://github.com/unknown/matchviz#readme"
Issues = "https://github.com/unknown/matchviz/issues"
Source = "https://github.com/unknown/matchviz"

[tool.hatch.version]
path = "src/matchviz/__about__.py"

[tool.hatch.envs.test]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]

[tool.hatch.envs.notebook]
dependencies = [
  "ipykernel", 
  "jupyterlab"]

[tool.hatch.envs.test.scripts]
run = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.10"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/matchviz tests}"

[tool.coverage.run]
source_pkgs = ["matchviz", "tests"]
branch = true
parallel = true
omit = [
  "src/matchviz/__about__.py",
]

[tool.coverage.paths]
matchviz = ["src/matchviz", "*/matchviz/src/matchviz"]
tests = ["tests", "*/matchviz/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[project.scripts]
matchviz = "matchviz.cli:cli"
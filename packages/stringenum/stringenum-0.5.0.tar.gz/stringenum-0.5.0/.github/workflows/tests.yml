name: Tests

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/tests.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/tests.yml'
  workflow_dispatch:
  workflow_call:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.13']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        id: setup-uv
        uses: astral-sh/setup-uv@v3

      - name: Install the project dependencies
        run: uv sync --python ${{ matrix.python-version }}

      - name: Run tests and generate coverage
        run: uv run coverage run --parallel-mode -m pytest -vv

      - name: Build
        run: uv build

      - name: Get version
        id: version
        run: echo "version=$(uv run python -c 'import stringenum; print(stringenum.__version__)')" >> $GITHUB_OUTPUT
      
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage.${{ matrix.python-version }}
          path: .coverage*
          include-hidden-files: true

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: stringenum-${{ steps.version.outputs.version }}-py${{ matrix.python-version }}
          path: "dist/*"

  coverage:
    needs: [tests]
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        id: setup-uv
        uses: astral-sh/setup-uv@v3

      - name: Install the project dependencies
        run: uv sync --python 3.12

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage.*
          path: cov
          merge-multiple: true

      - name: Combine
        run: uv run coverage combine cov/

      - name: Generate report
        run: uv run coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          env_vars: OS,PYTHON
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

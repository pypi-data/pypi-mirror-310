import{d as l}from"./index.Bps3ZUeT.js";const j=async(a="",i=!1)=>{let n=null;const e=await fetch(`${l}/api/models${i?"/base":""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(n=o,console.log(o),null));if(n)throw n;let t=(e==null?void 0:e.data)??[];return t=t.filter(o=>o).sort((o,s)=>{const c=o.name.toLowerCase(),r=s.name.toLowerCase();return c<r?-1:c>r?1:o.name<s.name?-1:o.name>s.name?1:0}),console.log(t),t},g=async(a,i)=>{let n=null;const e=await fetch(`${l}/api/chat/completed`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(i)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n=t,null));if(n)throw n;return e},m=async(a,i,n)=>{let e=null;const t=await fetch(`${l}/api/chat/actions/${i}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(n)}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),"detail"in o?e=o.detail:e=o,null));if(e)throw e;return t},$=async(a="")=>{let i=null;const n=await fetch(`${l}/api/task/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),i=e,null));if(i)throw i;return n},T=async(a,i)=>{let n=null;const e=await fetch(`${l}/api/task/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(i)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n=t,null));if(n)throw n;return e},S=async(a="",i,n,e)=>{var s,c;let t=null;const o=await fetch(`${l}/api/task/title/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,messages:n,...e&&{chat_id:e}})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),"detail"in r&&(t=r.detail),null));if(t)throw t;return((c=(s=o==null?void 0:o.choices[0])==null?void 0:s.message)==null?void 0:c.content.replace(/["']/g,""))??"New Chat"},A=async(a="",i,n,e)=>{var s,c;let t=null;const o=await fetch(`${l}/api/task/tags/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,messages:n,...e&&{chat_id:e}})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),"detail"in r&&(t=r.detail),null));if(t)throw t;try{const p=(((c=(s=o==null?void 0:o.choices[0])==null?void 0:s.message)==null?void 0:c.content)??"").replace(/['‘’`]/g,'"'),h=p.indexOf("{"),d=p.lastIndexOf("}");if(h!==-1&&d!==-1){const f=p.substring(h,d+1),u=JSON.parse(f);return u&&u.tags?Array.isArray(u.tags)?u.tags:[]:[]}return[]}catch(r){return console.error("Failed to parse response: ",r),[]}},C=async(a="",i,n,e)=>{var c,r;let t=null;const o=await fetch(`${l}/api/task/emoji/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,prompt:n,...e&&{chat_id:e}})}).then(async p=>{if(!p.ok)throw await p.json();return p.json()}).catch(p=>(console.log(p),"detail"in p&&(t=p.detail),null));if(t)throw t;const s=((r=(c=o==null?void 0:o.choices[0])==null?void 0:c.message)==null?void 0:r.content.replace(/["']/g,""))??null;return s&&new RegExp("\\p{Extended_Pictographic}","u").test(s)?s.match(new RegExp("\\p{Extended_Pictographic}","gu"))[0]:null},O=async(a="",i,n,e,t="web_search")=>{var c,r;let o=null;const s=await fetch(`${l}/api/task/queries/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,messages:n,prompt:e,type:t})}).then(async p=>{if(!p.ok)throw await p.json();return p.json()}).catch(p=>(console.log(p),"detail"in p&&(o=p.detail),null));if(o)throw o;try{const h=(((r=(c=s==null?void 0:s.choices[0])==null?void 0:c.message)==null?void 0:r.content)??"").replace(/['‘’`]/g,'"'),d=h.indexOf("{"),f=h.lastIndexOf("}");if(d!==-1&&f!==-1){const u=h.substring(d,f+1),w=JSON.parse(u);return w&&w.queries?Array.isArray(w.queries)?w.queries:[]:[]}return[]}catch(p){return console.error("Failed to parse response: ",p),[]}},P=async(a="",i,n,e)=>{const t=new AbortController;let o=null;const s=await fetch(`${l}/api/task/moa/completions`,{signal:t.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({model:i,prompt:n,responses:e,stream:!0})}).catch(c=>(console.log(c),o=c,null));if(o)throw o;return[s,t]},k=async(a="")=>{let i=null;const n=await fetch(`${l}/api/pipelines/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),i=t,null));if(i)throw i;return(n==null?void 0:n.data)??[]},B=async(a,i,n)=>{let e=null;const t=new FormData;t.append("file",i),t.append("urlIdx",n);const o=await fetch(`${l}/api/pipelines/upload`,{method:"POST",headers:{...a&&{authorization:`Bearer ${a}`}},body:t}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),"detail"in s?e=s.detail:e=s,null));if(e)throw e;return o},z=async(a,i,n)=>{let e=null;const t=await fetch(`${l}/api/pipelines/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({url:i,urlIdx:n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),"detail"in o?e=o.detail:e=o,null));if(e)throw e;return t},b=async(a,i,n)=>{let e=null;const t=await fetch(`${l}/api/pipelines/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({id:i,urlIdx:n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),"detail"in o?e=o.detail:e=o,null));if(e)throw e;return t},E=async(a,i)=>{let n=null;const e=new URLSearchParams;i!==void 0&&e.append("urlIdx",i);const t=await fetch(`${l}/api/pipelines?${e.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return(t==null?void 0:t.data)??[]},v=async(a,i,n)=>{let e=null;const t=new URLSearchParams;n!==void 0&&t.append("urlIdx",n);const o=await fetch(`${l}/api/pipelines/${i}/valves?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),e=s,null));if(e)throw e;return o},N=async(a,i,n)=>{let e=null;const t=new URLSearchParams;n!==void 0&&t.append("urlIdx",n);const o=await fetch(`${l}/api/pipelines/${i}/valves/spec?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),e=s,null));if(e)throw e;return o},J=async(a="",i,n,e)=>{let t=null;const o=new URLSearchParams;e!==void 0&&o.append("urlIdx",e);const s=await fetch(`${l}/api/pipelines/${i}/valves/update?${o.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(n)}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.log(c),"detail"in c?t=c.detail:t=c,null));if(t)throw t;return s},x=async()=>{let a=null;const i=await fetch(`${l}/api/config`,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n,null));if(a)throw a;return i},G=async()=>{let a=null;const i=await fetch(`${l}/api/changelog`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n,null));if(a)throw a;return i},L=async()=>{let a=null;const i=await fetch(`${l}/api/version/updates`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n,null));if(a)throw a;return i},R=async a=>{let i=null;const n=await fetch(`${l}/api/webhook`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.log(e),i=e,null));if(i)throw i;return n.url},U=async(a,i)=>{let n=null;const e=await fetch(`${l}/api/webhook`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({url:i})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t,null));if(n)throw n;return e.url};export{x as a,R as b,k as c,J as d,N as e,v as f,j as g,E as h,z as i,b as j,B as k,$ as l,T as m,L as n,G as o,C as p,S as q,A as r,O as s,g as t,U as u,m as v,P as w};
//# sourceMappingURL=index.DNtYaEd8.js.map

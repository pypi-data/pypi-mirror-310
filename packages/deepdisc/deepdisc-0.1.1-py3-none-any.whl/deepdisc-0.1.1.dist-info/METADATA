Metadata-Version: 2.1
Name: deepdisc
Version: 0.1.1
Author-email: Grant Merz <gmerz3@illinois.edu>, Colin Burke <colinjb2@illinois.edu>
License: MIT License
        
        Copyright (c) 2023 Grant Merz
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering :: Astronomy
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: sphinx; extra == "dev"
Requires-Dist: sphinx-rtd-theme; extra == "dev"
Requires-Dist: sphinx-autoapi; extra == "dev"
Requires-Dist: pylint; extra == "dev"
Requires-Dist: nbconvert; extra == "dev"
Requires-Dist: nbsphinx; extra == "dev"
Requires-Dist: ipython; extra == "dev"
Requires-Dist: matplotlib; extra == "dev"
Requires-Dist: numpy; extra == "dev"
Requires-Dist: sep; extra == "dev"

# DeepDISC
Using deep learning for Detection, Instance Segmentation, and Classification on astronomical survey images.

*Reference Paper:* [Merz et al. 2023](https://academic.oup.com/mnras/article/526/1/1122/7273850)

*Corresponding Author:* 
[Grant Merz](gmerz3@illinois.edu), University of Illinois at Urbana-Champaign

*Contributors (in alphabetical order):* Patrick D. Aleo, Colin J. Burke, Yichen Liu, Xin Liu, Grant Merz, Anshul Shah, .

This is an updated repo of the original implementation (https://github.com/burke86/astro_rcnn)

## Description:

DeepDISC is a deep learning framework for efficiently performing source detection, classification, and segmnetation (deblending) on astronomical images.  We have built the code using detectron2 https://detectron2.readthedocs.io/en/latest/ for a modular design an access to state-of-the-art models. 

Setup:

conda env create -f environment.yml

You will also need to install [scarlet](https://pmelchior.github.io/scarlet/install.html) and [detectron2](https://detectron2.readthedocs.io/en/latest/tutorials/install.html). Building from the source is recommended for both

Usage:
```
demo_decam.ipynb
```
This notebook demonstrates how to set up, train and evaluate a model using the detectron2 API. It requires the user to have downloaded the PhoSim simulated DECam data used in [Burke et al. 2019, MNRAS, 490 3952.](http://adsabs.harvard.edu/doi/10.1093/mnras/stz2845).   The data can be found here: [training set (1,000 images)](https://uofi.box.com/s/svlkblkh5o4a3q3qwu7iks6r21cmmu64) [validation set (250 images)](https://uofi.box.com/s/m22q747nawtxq8e5iihjulpapwlvucr5) [test set (50 images)](https://uofi.box.com/s/bmtkjrj9g832w9qybjd1yc4l6cyqx6cs).

```
demo_hsc.ipynb
```
This notebook follows a very similar procedure to ```demo_decam.ipynb```, but for real HSC data.  The ground truth object locations and masks are constructed following ```training_data.ipynb``` and classes are constructed with external catalog matching following ```hsc_class_assign.ipynb``` It is largely for demo purposes, so will not reflect the results of the paper.  The training scripts we used to recreate the paper results are in ```train_decam.py``` and ```train_hsc_primary.py```  


